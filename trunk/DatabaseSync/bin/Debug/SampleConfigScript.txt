-- BEGIN Enable Snapshot Isolation on Database 'sync' if needed
IF EXISTS (SELECT NAME FROM sys.databases where NAME = N'sync' AND [snapshot_isolation_state] = 0)
BEGIN
	ALTER DATABASE [sync] SET ALLOW_SNAPSHOT_ISOLATION ON
END
GO
-- END Enable Snapshot Isolation on Database 'sync' if needed

-- BEGIN Create Scope Table named [dbo].[scope_info]
IF NOT EXISTS (SELECT t.name FROM sys.tables t JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE t.name = N'scope_info' AND s.name = N'dbo')
BEGIN
	CREATE TABLE [dbo].[scope_info] ([scope_local_id] int IDENTITY(1,1) NOT NULL, [scope_id] uniqueidentifier DEFAULT NEWID() NOT NULL, [scope_name] nvarchar(100) NOT NULL, [scope_sync_knowledge] varbinary(max) NULL, [scope_tombstone_cleanup_knowledge] varbinary(max) NULL, [scope_timestamp] timestamp NULL, [scope_config_id] uniqueidentifier NULL, [scope_restore_count] int DEFAULT 0 NOT NULL)
	ALTER TABLE [dbo].[scope_info] ADD CONSTRAINT [PK_dbo.scope_info] PRIMARY KEY ([scope_name])
END
GO
-- END Create Scope Table named [dbo].[scope_info]

-- BEGIN Create Scope Config Table named [dbo].[scope_config]
IF NOT EXISTS (SELECT t.name FROM sys.tables t JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE t.name = N'scope_config' AND s.name = N'dbo')
BEGIN
	CREATE TABLE [dbo].[scope_config] ([config_id] uniqueidentifier NOT NULL, [config_data] xml NOT NULL)
	ALTER TABLE [dbo].[scope_config] ADD CONSTRAINT [PK_dbo.scope_config] PRIMARY KEY ([config_id])
END
GO
-- END Create Scope Config Table named [dbo].[scope_config]

-- BEGIN Create side table [dbo].[Urun_tracking]
CREATE TABLE [dbo].[Urun_tracking] ([BarkodNo] nvarchar(50) NOT NULL, [update_scope_local_id] int NULL, [scope_update_peer_key] int NULL, [scope_update_peer_timestamp] bigint NULL, [local_update_peer_key] int NOT NULL, [local_update_peer_timestamp] timestamp NOT NULL, [create_scope_local_id] int NULL, [scope_create_peer_key] int NULL, [scope_create_peer_timestamp] bigint NULL, [local_create_peer_key] int NOT NULL, [local_create_peer_timestamp] bigint NOT NULL, [sync_row_is_tombstone] int NOT NULL, [restore_timestamp] bigint NULL, [last_change_datetime] datetime NULL)
GO
-- END Create side table [dbo].[Urun_tracking]

-- BEGIN Create Primary Key on side table [dbo].[Urun_tracking]
ALTER TABLE [dbo].[Urun_tracking] ADD CONSTRAINT [PK_dbo.Urun_tracking] PRIMARY KEY ([BarkodNo])
GO
-- END Create Primary Key on side table [dbo].[Urun_tracking]

-- BEGIN Create index on side table [dbo].[Urun_tracking]
CREATE NONCLUSTERED INDEX [local_update_peer_timestamp_index] ON [dbo].[Urun_tracking] ([local_update_peer_timestamp], [BarkodNo])
GO
-- END Create index on side table [dbo].[Urun_tracking]

-- BEGIN Populate tracking table [dbo].[Urun_tracking] for existing data in table [Urun]
INSERT INTO [dbo].[Urun_tracking] ([BarkodNo], [create_scope_local_id], [local_create_peer_key], [local_create_peer_timestamp], [update_scope_local_id], [local_update_peer_key], [sync_row_is_tombstone]) SELECT [base].[BarkodNo], NULL, 0, @@DBTS+1, NULL, 0, 0 FROM [Urun] [base] LEFT OUTER JOIN [dbo].[Urun_tracking] [side] ON [base].[BarkodNo] = [side].[BarkodNo] WHERE [side].[BarkodNo] IS NULL
GO
-- END Populate tracking table [dbo].[Urun_tracking] for existing data in table [Urun]

-- BEGIN Insert Trigger for table [Urun]
CREATE TRIGGER [Urun_insert_trigger] ON [Urun] FOR INSERT AS
UPDATE [side] SET [sync_row_is_tombstone] = 0, [local_update_peer_key] = 0, [restore_timestamp] = NULL, [update_scope_local_id] = NULL, [last_change_datetime] = GETDATE() FROM [dbo].[Urun_tracking] [side] JOIN INSERTED [i] ON [side].[BarkodNo] = [i].[BarkodNo]
INSERT INTO [dbo].[Urun_tracking] ([i].[BarkodNo], [create_scope_local_id], [local_create_peer_key], [local_create_peer_timestamp], [update_scope_local_id], [local_update_peer_key], [sync_row_is_tombstone], [last_change_datetime], [restore_timestamp]) SELECT [i].[BarkodNo], NULL, 0, @@DBTS+1, NULL, 0, 0, GETDATE(), NULL FROM INSERTED [i] LEFT JOIN [dbo].[Urun_tracking] [side] ON [side].[BarkodNo] = [i].[BarkodNo] WHERE [side].[BarkodNo] IS NULL
GO
-- END Insert Trigger for table [Urun]

-- BEGIN Update Trigger for table [Urun]
CREATE TRIGGER [Urun_update_trigger] ON [Urun] FOR UPDATE AS
UPDATE [side] SET [local_update_peer_key] = 0, [restore_timestamp] = NULL, [update_scope_local_id] = NULL, [last_change_datetime] = GETDATE() FROM [dbo].[Urun_tracking] [side] JOIN INSERTED [i] ON [side].[BarkodNo] = [i].[BarkodNo]
GO
-- END Update Trigger for table [Urun]

-- BEGIN Delete Trigger for table [Urun]
CREATE TRIGGER [Urun_delete_trigger] ON [Urun] FOR DELETE AS
UPDATE [side] SET [sync_row_is_tombstone] = 1, [local_update_peer_key] = 0, [restore_timestamp] = NULL, [update_scope_local_id] = NULL, [last_change_datetime] = GETDATE() FROM [dbo].[Urun_tracking] [side] JOIN DELETED [d] ON [side].[BarkodNo] = [d].[BarkodNo]
GO
-- END Delete Trigger for table [Urun]

-- BEGIN Select Incremental Changes command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_selectchanges]
	@sync_min_timestamp BigInt,
	@sync_scope_local_id Int,
	@sync_scope_restore_count Int
AS
BEGIN
SELECT [side].[BarkodNo], [base].[Ad], [base].[Adet], [side].[sync_row_is_tombstone], [side].[local_update_peer_timestamp] as sync_row_timestamp, case when ([side].[update_scope_local_id] is null or [side].[update_scope_local_id] <> @sync_scope_local_id) then COALESCE([side].[restore_timestamp], [side].[local_update_peer_timestamp]) else [side].[scope_update_peer_timestamp] end as sync_update_peer_timestamp, case when ([side].[update_scope_local_id] is null or [side].[update_scope_local_id] <> @sync_scope_local_id) then case when ([side].[local_update_peer_key] > @sync_scope_restore_count) then @sync_scope_restore_count else [side].[local_update_peer_key] end else [side].[scope_update_peer_key] end as sync_update_peer_key, case when ([side].[create_scope_local_id] is null or [side].[create_scope_local_id] <> @sync_scope_local_id) then [side].[local_create_peer_timestamp] else [side].[scope_create_peer_timestamp] end as sync_create_peer_timestamp, case when ([side].[create_scope_local_id] is null or [side].[create_scope_local_id] <> @sync_scope_local_id) then case when ([side].[local_create_peer_key] > @sync_scope_restore_count) then @sync_scope_restore_count else [side].[local_create_peer_key] end else [side].[scope_create_peer_key] end as sync_create_peer_key FROM [Urun] [base] RIGHT JOIN [dbo].[Urun_tracking] [side] ON [base].[BarkodNo] = [side].[BarkodNo] WHERE [side].[local_update_peer_timestamp] > @sync_min_timestamp
END
GO
-- END Select Incremental Changes command for table [Urun]

-- BEGIN Select Row command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_selectrow]
	@P_3 NVarChar(50),
	@sync_scope_local_id Int,
	@sync_scope_restore_count Int
AS
BEGIN
SELECT [side].[BarkodNo], [base].[Ad], [base].[Adet], [side].[sync_row_is_tombstone], [side].[local_update_peer_timestamp] as sync_row_timestamp, case when ([side].[update_scope_local_id] is null or [side].[update_scope_local_id] <> @sync_scope_local_id) then COALESCE([side].[restore_timestamp], [side].[local_update_peer_timestamp]) else [side].[scope_update_peer_timestamp] end as sync_update_peer_timestamp, case when ([side].[update_scope_local_id] is null or [side].[update_scope_local_id] <> @sync_scope_local_id) then case when ([side].[local_update_peer_key] > @sync_scope_restore_count) then @sync_scope_restore_count else [side].[local_update_peer_key] end else [side].[scope_update_peer_key] end as sync_update_peer_key, case when ([side].[create_scope_local_id] is null or [side].[create_scope_local_id] <> @sync_scope_local_id) then [side].[local_create_peer_timestamp] else [side].[scope_create_peer_timestamp] end as sync_create_peer_timestamp, case when ([side].[create_scope_local_id] is null or [side].[create_scope_local_id] <> @sync_scope_local_id) then case when ([side].[local_create_peer_key] > @sync_scope_restore_count) then @sync_scope_restore_count else [side].[local_create_peer_key] end else [side].[scope_create_peer_key] end as sync_create_peer_key from [Urun] [base] right join [dbo].[Urun_tracking] [side] on [base].[BarkodNo] = [side].[BarkodNo] WHERE [side].[BarkodNo] = @P_3
END
GO
-- END Select Row command for table [Urun]

-- BEGIN Insert Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_insert]
	@P_1 NVarChar(50),
	@P_2 Int,
	@P_3 NVarChar(50),
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; IF NOT EXISTS (SELECT * FROM [dbo].[Urun_tracking] WHERE [BarkodNo] = @P_3) BEGIN INSERT INTO [Urun]([Ad], [Adet], [BarkodNo]) VALUES (@P_1, @P_2, @P_3);  SET @sync_row_count = @@rowcount;  END 
END
GO
-- END Insert Command for table [Urun]

-- BEGIN Update Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_update]
	@P_1 NVarChar(50),
	@P_2 Int,
	@P_3 NVarChar(50),
	@sync_force_write Int,
	@sync_min_timestamp BigInt,
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; UPDATE [Urun] SET [Ad] = @P_1, [Adet] = @P_2 FROM [Urun] [base] JOIN [dbo].[Urun_tracking] [side] ON [base].[BarkodNo] = [side].[BarkodNo] WHERE ([side].[local_update_peer_timestamp] <= @sync_min_timestamp OR @sync_force_write = 1) AND ([base].[BarkodNo] = @P_3); SET @sync_row_count = @@ROWCOUNT;
END
GO
-- END Update Command for table [Urun]

-- BEGIN Delete Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_delete]
	@P_3 NVarChar(50),
	@sync_force_write Int,
	@sync_min_timestamp BigInt,
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; DELETE [Urun] FROM [Urun] [base] JOIN [dbo].[Urun_tracking] [side] ON [base].[BarkodNo] = [side].[BarkodNo] WHERE ([side].[local_update_peer_timestamp] <= @sync_min_timestamp OR @sync_force_write = 1) AND ([base].[BarkodNo] = @P_3); SET @sync_row_count = @@ROWCOUNT;
END
GO
-- END Delete Command for table [Urun]

-- BEGIN Insert Metadata Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_insertmetadata]
	@P_3 NVarChar(50),
	@sync_scope_local_id Int,
	@sync_row_is_tombstone Int,
	@sync_create_peer_key Int,
	@sync_create_peer_timestamp BigInt,
	@sync_update_peer_key Int,
	@sync_update_peer_timestamp BigInt,
	@sync_check_concurrency Int,
	@sync_row_timestamp BigInt,
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; UPDATE [dbo].[Urun_tracking] SET [create_scope_local_id] = @sync_scope_local_id, [scope_create_peer_key] = @sync_create_peer_key, [scope_create_peer_timestamp] = @sync_create_peer_timestamp, [local_create_peer_key] = 0, [local_create_peer_timestamp] = @@DBTS+1, [update_scope_local_id] = @sync_scope_local_id, [scope_update_peer_key] = @sync_update_peer_key, [scope_update_peer_timestamp] = @sync_update_peer_timestamp, [local_update_peer_key] = 0, [restore_timestamp] = NULL, [sync_row_is_tombstone] = @sync_row_is_tombstone WHERE ([BarkodNo] = @P_3) AND (@sync_check_concurrency = 0 or [local_update_peer_timestamp] = @sync_row_timestamp);SET @sync_row_count = @@ROWCOUNT;IF (@sync_row_count = 0) BEGIN INSERT INTO [dbo].[Urun_tracking] ([BarkodNo], [create_scope_local_id], [scope_create_peer_key], [scope_create_peer_timestamp], [local_create_peer_key], [local_create_peer_timestamp], [update_scope_local_id], [scope_update_peer_key], [scope_update_peer_timestamp], [local_update_peer_key], [restore_timestamp], [sync_row_is_tombstone], [last_change_datetime]) VALUES (@P_3, @sync_scope_local_id, @sync_create_peer_key, @sync_create_peer_timestamp, 0, @@DBTS+1, @sync_scope_local_id, @sync_update_peer_key, @sync_update_peer_timestamp, 0, NULL, @sync_row_is_tombstone, GETDATE());SET @sync_row_count = @@ROWCOUNT; END;
END
GO
-- END Insert Metadata Command for table [Urun]

-- BEGIN Update Metadata Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_updatemetadata]
	@P_3 NVarChar(50),
	@sync_scope_local_id Int,
	@sync_row_is_tombstone Int,
	@sync_create_peer_key Int,
	@sync_create_peer_timestamp BigInt,
	@sync_update_peer_key Int,
	@sync_update_peer_timestamp BigInt,
	@sync_check_concurrency Int,
	@sync_row_timestamp BigInt,
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; DECLARE @was_tombstone int; SELECT @was_tombstone = [sync_row_is_tombstone] FROM [dbo].[Urun_tracking] WHERE ([BarkodNo] = @P_3);IF (@was_tombstone IS NOT NULL AND @was_tombstone = 1 AND @sync_row_is_tombstone = 0) BEGIN UPDATE [dbo].[Urun_tracking] SET [create_scope_local_id] = @sync_scope_local_id, [scope_create_peer_key] = @sync_create_peer_key, [scope_create_peer_timestamp] = @sync_create_peer_timestamp, [local_create_peer_key] = 0, [local_create_peer_timestamp] = @@DBTS+1, [update_scope_local_id] = @sync_scope_local_id, [scope_update_peer_key] = @sync_update_peer_key, [scope_update_peer_timestamp] = @sync_update_peer_timestamp, [local_update_peer_key] = 0, [restore_timestamp] = NULL, [sync_row_is_tombstone] = @sync_row_is_tombstone WHERE ([BarkodNo] = @P_3) AND (@sync_check_concurrency = 0 or [local_update_peer_timestamp] = @sync_row_timestamp); END ELSE BEGIN UPDATE [dbo].[Urun_tracking] SET [update_scope_local_id] = @sync_scope_local_id, [scope_update_peer_key] = @sync_update_peer_key, [scope_update_peer_timestamp] = @sync_update_peer_timestamp, [local_update_peer_key] = 0, [restore_timestamp] = NULL, [sync_row_is_tombstone] = @sync_row_is_tombstone WHERE ([BarkodNo] = @P_3) AND (@sync_check_concurrency = 0 or [local_update_peer_timestamp] = @sync_row_timestamp); END;SET @sync_row_count = @@ROWCOUNT;
END
GO
-- END Update Metadata Command for table [Urun]

-- BEGIN Delete Metadata Command for table [Urun]
CREATE PROCEDURE [dbo].[Urun_deletemetadata]
	@P_3 NVarChar(50),
	@sync_check_concurrency Int,
	@sync_row_timestamp BigInt,
	@sync_row_count Int OUTPUT
AS
BEGIN
SET @sync_row_count = 0; DELETE [side] FROM [dbo].[Urun_tracking] [side] WHERE [BarkodNo] = @P_3 AND (@sync_check_concurrency = 0 or [local_update_peer_timestamp] = @sync_row_timestamp);SET @sync_row_count = @@ROWCOUNT;
END
GO
-- END Delete Metadata Command for table [Urun]

-- BEGIN Add scope entry for scope 'Urun'
INSERT INTO [dbo].[scope_info] ([scope_name], [scope_config_id]) VALUES (N'Urun', 'c5506503-d4ce-4646-8415-fbb50454067e')
GO
-- END Add scope entry for scope 'Urun'

-- BEGIN Add scope configuration entry for config id 'c5506503-d4ce-4646-8415-fbb50454067e'
INSERT INTO [dbo].[scope_config] ([config_id], [config_data]) VALUES ('c5506503-d4ce-4646-8415-fbb50454067e', N'<SqlSyncProviderScopeConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Adapter Name="[Urun]" GlobalName="[Urun]" TrackingTable="[dbo].[Urun_tracking]" SelChngProc="[dbo].[Urun_selectchanges]" SelRowProc="[dbo].[Urun_selectrow]" InsProc="[dbo].[Urun_insert]" UpdProc="[dbo].[Urun_update]" DelProc="[dbo].[Urun_delete]" InsMetaProc="[dbo].[Urun_insertmetadata]" UpdMetaProc="[dbo].[Urun_updatemetadata]" DelMetaProc="[dbo].[Urun_deletemetadata]" InsTrig="[Urun_insert_trigger]" UpdTrig="[Urun_update_trigger]" DelTrig="[Urun_delete_trigger]"><Col name="Ad" type="nvarchar" size="50" null="true" param="@P_1" /><Col name="Adet" type="int" null="true" param="@P_2" /><Col name="BarkodNo" type="nvarchar" size="50" param="@P_3" pk="true" /></Adapter></SqlSyncProviderScopeConfiguration>')
GO
-- END Add scope configuration entry for config id 'c5506503-d4ce-4646-8415-fbb50454067e'

