<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Data</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Data.AggregateFunctionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Data.AggregateFunction"/> items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.RadObservableCollection`1">
            <summary>
            Represents an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> that has ability to suspend
            change notification events.
            </summary>
            <typeparam name="T">The type of the items in the collection.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.ResumeNotifications">
            <summary>
            Resumes the notifications for changes in the collection. If there are changes
            to the collection raises property and collection changed events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.SuspendNotifications">
            <summary>
            Suspends the notifications for changes in the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <param name="items">The items that will be added.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="items"/> is null</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.Reset">
            <summary>
            Raises <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> with 
            <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset"/> changed action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> event when
            notifications are not suspended.
            </summary>
            <param name="e">The event data to report in the event.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event when
            notifications are not suspended.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.OnCollectionChanging(Telerik.Windows.Data.CollectionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanging"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Windows.Data.CollectionChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadObservableCollection`1.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RadObservableCollection`1.CollectionChanging">
            <summary>
            Occurs when collection is changing. (Cancelable)
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RadObservableCollection`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadObservableCollection`1.IsDirty">
            <summary>
            Gets or sets a value indicating whether change to the collection is made when
            its notifications are suspended.
            </summary>
            <value><c>true</c> if this instance is has been changed while notifications are
            suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RadObservableCollection`1.NotificationsSuspended">
            <summary>
            Gets or sets a value indicating whether change notifications are suspended.
            </summary>
            <value>
            	<c>True</c> if notifications are suspended, otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunctionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Data.AggregateFunction"/> with the specified function name.
            </summary>
            <value>
            First <see cref="T:Telerik.Windows.Data.AggregateFunction"/> with the specified function name 
            if any, otherwise null.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.AggregateResultCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Data.AggregateResult"/> items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResultCollection.Item(System.String)">
            <summary>
            Gets the first <see cref="T:Telerik.Windows.Data.AggregateResult"/> which
            <see cref="P:Telerik.Windows.Data.AggregateResult.FunctionName"/> is equal to <paramref name="functionName"/>.
            </summary>
            <value>
            The <see cref="T:Telerik.Windows.Data.AggregateResult"/> for the specified function if any, otherwise null.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.CollectionChangingEventArgs">
            <summary>
            Represents event data for CollectionChanging event
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CollectionChangingEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CollectionChangingEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Data.CollectionChangingEventArgs.#ctor(System.ComponentModel.CollectionChangeAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CollectionChangingEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.Windows.Data.CollectionChangingEventArgs.Cancel">
            <summary>
            Set this to true to cancel the changes
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.CollectionChangingEventArgs.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Telerik.Windows.Data.CollectionChangingEventArgs.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Telerik.Windows.Data.CollectionChangingEventArgs.Action">
            <summary>
            Gets or sets the collection change action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:Telerik.Windows.Data.QueryableCollectionView">
            <summary>
            Represents a view for grouping, sorting, filtering and paging data collection 
            using LINQ based query operators.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IPagedCollectionView">
            <summary>Provides paging functionality for a collection view.</summary>
        </member>
        <member name="M:Telerik.Windows.Data.IPagedCollectionView.MoveToFirstPage">
            <summary>Sets the first page as the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.IPagedCollectionView.MoveToLastPage">
            <summary>Sets the last page as the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.IPagedCollectionView.MoveToNextPage">
            <summary>Moves to the page after the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.IPagedCollectionView.MoveToPage(System.Int32)">
            <summary>Requests a page move to the page at the specified index.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
            <param name="pageIndex">The index of the page to move to.</param>
        </member>
        <member name="M:Telerik.Windows.Data.IPagedCollectionView.MoveToPreviousPage">
            <summary>Moves to the page before the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="E:Telerik.Windows.Data.IPagedCollectionView.PageChanged">
            <summary>Occurs when the <see cref="P:Telerik.Windows.Data.IPagedCollectionView.PageIndex" /> has changed.</summary>
        </member>
        <member name="E:Telerik.Windows.Data.IPagedCollectionView.PageChanging">
            <summary>Occurs when the <see cref="P:Telerik.Windows.Data.IPagedCollectionView.PageIndex" /> is changing.</summary>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.CanChangePage">
            <summary>Gets a value that indicates whether the <see cref="P:Telerik.Windows.Data.IPagedCollectionView.PageIndex" /> value is allowed to change.</summary>
            <returns>true if the <see cref="P:Telerik.Windows.Data.IPagedCollectionView.PageIndex" /> value is allowed to change; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.IsPageChanging">
            <summary>Gets a value that indicates whether a page index change is in process.</summary>
            <returns>true if the page index is changing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.ItemCount">
            <summary>Gets the minimum number of items known to be in the source collection.</summary>
            <returns>The minimum number of items known to be in the source collection.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.PageIndex">
            <summary>Gets the zero-based index of the current page.</summary>
            <returns>The zero-based index of the current page.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.PageSize">
            <summary>Gets or sets the number of items to display on a page.</summary>
            <returns>The number of items to display on a page.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.IPagedCollectionView.TotalItemCount">
            <summary>Gets the total number of items in the source collection.</summary>
            <returns>The total number of items in the source collection, or -1 if the total number is unknown.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.AddNew">
            <summary>
            Adds a new item to the collection.
            </summary>
            <returns>
            The new item that is added to the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException"><see cref="P:Telerik.Windows.Data.QueryableCollectionView.CanAddNew"/> is false.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.CommitNew">
            <summary>
            Ends the add transaction and saves the pending new item.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.CancelNew">
            <summary>
            Ends the add transaction and discards the pending new item.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.EditItem(System.Object)">
            <summary>
            Begins an edit transaction of the specified item.
            </summary>
            <param name="item">The item to edit.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.CommitEdit">
            <summary>
            Ends the edit transaction and saves the pending changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.CancelEdit">
            <summary>
            Ends the edit transaction and discards any pending changes to the item.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            CancelEdit is not supported for the current edit item. 
            Only items implementing <see cref="T:System.ComponentModel.IEditableObject"/> are supported.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.Remove(System.Object)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified position from the collection.
            </summary>
            <param name="index">The position of the item to remove.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveToFirstPage">
            <summary>Sets the first page as the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveToLastPage">
            <summary>Sets the last page as the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveToNextPage">
            <summary>Moves to the page after the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveToPage(System.Int32)">
            <summary>Requests a page move to the page at the specified index.</summary>
            <returns>true if the move was successfully initiated; otherwise, false.</returns>
            <param name="pageIndex">The index of the page to move to.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveToPreviousPage">
            <summary>Moves to the page before the current page.</summary>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.DeferRefresh">
            <summary>
            Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.
            </summary>
            <returns>
            An <see cref="T:System.IDisposable"/> object that you can use to dispose of the calling object. 
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentTo(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentToFirst">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentToLast">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentToNext">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Sets the item at the specified index to be the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.CurrentItem"/> in the view.
            </summary>
            <param name="position">The index to set the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.CurrentItem"/> to.</param>
            <returns>
            true if the resulting <see cref="P:Telerik.Windows.Data.QueryableCollectionView.CurrentItem"/> is an item within the view; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>position</c> is out of range.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.MoveCurrentToPrevious">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.OnCurrentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.QueryableCollectionView.CurrentChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.QueryableCollectionView.CurrentChanging"/> event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.CurrentChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.SetCurrentPosition(System.Int32)">
            <summary>
            Sets the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.CurrentPosition"/> to the given <paramref name="newPosition"/> .
            </summary>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.QueryableCollectionView"/> class.
            </summary>
            <param name="sourceCollection">The source collection.</param>
            <exception cref="T:System.ArgumentNullException"><c>sourceCollection</c> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.Contains(System.Object)">
            <summary>
            Returns a value that indicates whether a given item belongs to this collection view.
            </summary>
            <returns>
            true if the item belongs to this collection view; otherwise, false.
            </returns>
            <param name="item">The object to check.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.Refresh">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.QueryableCollectionView.PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.QueryableCollectionView.CollectionChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index at which the specified item is located.
            </summary>
            <returns>The index at which the specified item is located, or –1 if the item is unknown.</returns>
            <param name="item">The item to locate.</param>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableCollectionView.GetItemAt(System.Int32)">
            <summary>
            Retrieves the item at the specified zero-based index in the view.
            </summary>
            <returns>The item at the specified zero-based index in the view.</returns>
            <param name="index">The zero-based index of the item to retrieve.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than <see cref="P:Telerik.Windows.Data.QueryableCollectionView.ItemCount"/>. 
            </exception>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanAddNew">
            <summary>
            Gets a value that indicates whether a new item can be added to the collection.
            </summary>
            <returns>
            true if <see cref="P:Telerik.Windows.Data.QueryableCollectionView.SourceCollection"/> is not <see cref="P:System.Collections.IList.IsFixedSize"/> and 
            collection element has a default constructor; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CurrentAddItem">
            <summary>
            Gets the item that is being added during the current add transaction.
            </summary>
            <returns>
            The item that is being added if <see cref="P:Telerik.Windows.Data.QueryableCollectionView.IsAddingNew"/> is true; otherwise, null.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanRemove">
            <summary>
            Gets a value that indicates whether an item can be removed from the collection.
            </summary>
            <returns>
            true if an item can be removed from the collection; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanCancelEdit">
            <summary>
            Gets a value that indicates whether the editing of an item can be canceled.
            </summary>
            <returns>
            true if <see cref="P:Telerik.Windows.Data.QueryableCollectionView.CurrentEditItem"/> implements <see cref="T:System.ComponentModel.IEditableObject"/>; 
            otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CurrentEditItem">
            <summary>
            Gets the item in the collection that is being edited.
            </summary>
            <returns>
            The item in the collection that is being edited 
            if <see cref="P:Telerik.Windows.Data.QueryableCollectionView.IsEditingItem"/> is true; otherwise, null.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsAddingNew">
            <summary>
            Gets a value that indicates whether an add transaction is in progress.
            </summary>
            <returns>
            true if an add transaction is in progress; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsEditingItem">
            <summary>
            Gets a value that indicates whether an edit transaction is in progress.
            </summary>
            <returns>
            true if an edit transaction is in progress; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.NewItemPlaceholderPosition">
            <summary>
            Gets or sets the position of the new item placeholder in the collection.
            </summary>
            <returns>
            One of the enumeration values that specifies the position of the new item placeholder in the collection.
            </returns>
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.PageChanged">
            <summary>Occurs when the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.PageIndex"/> has changed.</summary>
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.PageChanging">
            <summary>Occurs when the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.PageIndex"/> is changing.</summary>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanChangePage">
            <summary>
            Gets a value that indicates whether the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.PageIndex"/> value can change.
            </summary>
            <returns>
            true if the <see cref="P:Telerik.Windows.Data.QueryableCollectionView.PageIndex"/> value can change; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsPageChanging">
            <summary>Gets a value that indicates whether a page index change is in process.</summary>
            <returns>true if the page index is changing; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.PageIndex">
            <summary>Gets the zero-based index of the current page.</summary>
            <returns>The zero-based index of the current page.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.PageSize">
            <summary>Gets or sets the number of items to display on a page.</summary>
            <returns>The number of items to display on a page.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.TotalItemCount">
            <summary>
            Gets the total number of items in the source collection, or -1 if the total number is unknown.
            </summary>
            <returns>
            The total number of items in the source collection, or -1 if the total number is unknown.
            </returns>
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.CollectionChanged">
            <inheritdoc />
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.CurrentChanged">
            <inheritdoc />
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.CurrentChanging">
            <inheritdoc />
        </member>
        <member name="E:Telerik.Windows.Data.QueryableCollectionView.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CurrentPosition">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsCurrentAfterLast">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsCurrentBeforeFirst">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CurrentItem">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.NeedsRefresh">
            <summary>
            Gets a value that indicates whether this view needs to be refreshed.
            </summary>
            <returns>true if the view needs to be refreshed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.SourceCollection">
            <summary>
            Returns the underlying collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable"/> object that is the underlying collection.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.ItemCount">
            <summary>
            Gets the minimum number of items known to be in the source collection.
            </summary>
            <returns>
            The minimum number of items known to be in the source collection.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanFilter">
            <summary>
            Gets a value that indicates whether this view supports filtering via the 
            <see cref="P:Telerik.Windows.Data.QueryableCollectionView.FilterDescriptors"/> property.
            </summary>
            <returns>For a default instance of <see cref="T:Telerik.Windows.Data.QueryableCollectionView"/>, this
            property always returns true.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanGroup">
            <summary>
            Gets a value that indicates whether this view supports grouping via the 
            <see cref="P:Telerik.Windows.Data.QueryableCollectionView.GroupDescriptors"/>
            property.
            </summary>
            <returns>For a default instance of <see cref="T:Telerik.Windows.Data.QueryableCollectionView"/>, this
            property always returns true.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.CanSort">
            <summary>
            Gets a value that indicates whether this view supports sorting via the 
            <see cref="P:Telerik.Windows.Data.QueryableCollectionView.SortDescriptors"/>
            property.
            </summary>
            <returns>For a default instance of <see cref="T:Telerik.Windows.Data.QueryableCollectionView"/>, this
            property always returns true.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.Culture">
            <summary>
            Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.
            </summary>
            <returns>
            The culture to use during sorting.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.Filter">
            <summary>
            Gets or sets a callback used to determine if an item is suitable for inclusion in the view.
            </summary>
            <returns>
            A method used to determine if an item is suitable for inclusion in the view.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Setting Filter property is not supported. Use <see cref="P:Telerik.Windows.Data.QueryableCollectionView.FilterDescriptors"/> property instead.
            </exception>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.Groups">
            <summary>
            Gets the top-level groups.
            </summary>
            <returns>
            A read-only collection of the top-level groups or null if there are no groups.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsEmpty">
            <summary>
            Returns a value that indicates whether the resulting view is empty.
            </summary>
            <returns>
            true if the resulting view is empty; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.SortDescriptors">
            <summary>
            Gets the sort descriptors used for sorting operations.
            </summary>
            <value>The sort descriptors.</value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.FilterDescriptors">
            <summary>
            Gets the filter descriptors used for filtering operations.
            </summary>
            <value>The filter descriptors.</value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.GroupDescriptors">
            <summary>
            Gets the group descriptors used for grouping operations.
            </summary>
            <value>The group descriptors.</value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.InternalList">
            <summary>
            Gets the list created from resulting query 
            after applying filtering, sorting, grouping and paging.
            </summary>
            <value>The internal list for the current view.</value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.Count">
            <summary>Gets the number of records in the view after filtering, sorting, and paging.</summary>
            <returns>The number of records in the view after filtering, sorting, and paging.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.IsGrouped">
            <summary>
            Gets a value indicating whether this instance is grouped.
            </summary>
            <value>
            	<c>true</c> if this instance is grouped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.System#ComponentModel#ICollectionView#SortDescriptions">
            <summary>
            Gets a collection of <see cref="T:System.ComponentModel.SortDescription"/> objects that describe how the items 
            in the collection are sorted in the view.
            </summary>
            <returns>
            A collection of <see cref="T:System.ComponentModel.SortDescription"/> objects that describe how the 
            items in the collection are sorted in the view.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.System#ComponentModel#ICollectionView#GroupDescriptions">
            <summary>
            Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"/> objects that describe 
            how the items in the collection are grouped in the view.
            </summary>
            <returns>
            A collection of <see cref="T:System.ComponentModel.GroupDescription"/> objects that describe how 
            the items in the collection are grouped in the view.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.SortDescriptions">
            <summary>
            Gets the underlying <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> collection.
            </summary>
            <value>The <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> for this view.</value>
        </member>
        <member name="P:Telerik.Windows.Data.QueryableCollectionView.GroupDescriptions">
            <summary>
            Gets the underlying <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> collection.
            </summary>
            <value>The <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> for this view.</value>
        </member>
        <member name="T:Telerik.Windows.Data.RadComplexChangeObservableCollection`1">
            <summary>
            Represents an observable collection with complex change notifications.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadComplexChangeObservableCollection`1.BeginComplexChange">
            <summary>
            Starts a new change log.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.ComplexChangeEventArgs">
            <summary>
             Contains information about items added or removed to the collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.ComplexChangeEventArgs.AddedItems">
            <summary>
             Contains the items added to the collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.ComplexChangeEventArgs.RemovedItems">
            <summary>
             Contains the items added to the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableExtensions.Take(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableExtensions.Skip(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableExtensions.Count(System.Linq.IQueryable)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableExtensions.ElementAt(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.QueryableFactory.CreateQueryable(System.Object)">
            <exception cref="T:System.ArgumentNullException"><c>source</c> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.EnumerableExtensions.ElementAt(System.Collections.IEnumerable,System.Int32)">
            <exception cref="T:System.ArgumentOutOfRangeException"><c>index</c> is out of range.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.EnumerableExtensions.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <exception cref="T:System.ArgumentNullException"><c>first</c> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><c>second</c> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><c>resultSelector</c> is null.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.DataControl">
            <summary>
            Represents a control that provides common functionality for all Telerik WPF controls that represent data.
            </summary>
            <summary>
            Represents a control that provides common functionality for all Telerik WPF controls that represent data.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.Selection.ISelector">
            <summary>
            Represents an element that can select records
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Selection.ISelector.RaiseSelectionChangedEvent(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Raises the selection changed event.
            </summary>
            <remarks>This property is used by the Selector infrastructure and is not meant to be used directly from your code.</remarks>
            <param name="addedItems">List of data items that were added to the selection.</param>
            <param name="removedItems">List of data items that were removed from the selection.</param>
        </member>
        <member name="M:Telerik.Windows.Data.Selection.ISelector.SetIsSelected(System.Object,System.Boolean)">
            <summary>
            Sets the selection state for a container that wraps a given data item.
            </summary>
            <remarks>This property is used by the Selector infrastructure and is not meant to be used directly from your code.</remarks>
            <param name="item">The data item.</param>
            <param name="isSelected">if set to <c>true</c> container is selected.</param>
        </member>
        <member name="M:Telerik.Windows.Data.Selection.ISelector.SetIsCurrent(System.Object,System.Boolean)">
            <summary>
            Sets the current state for a container that wraps a given data item.
            </summary>
            <remarks>This property is used by the Selector infrastructure and is not meant to be used directly from your code.</remarks>
            <param name="item">The data item.</param>
            <param name="isCurrent">if set to <c>true</c> container is current.</param>
        </member>
        <member name="P:Telerik.Windows.Data.Selection.ISelector.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Selection.ISelector.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
            <value>The current item.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Selection.ISelector.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Selection.ISelector.SelectedRecords">
            <summary>
            Gets the selected records.
            </summary>
            <value>The selected records.</value>
        </member>
        <member name="E:Telerik.Windows.Data.Selection.ISelector.SelectionChanged">
            <summary>
            Occurs when the selected items have changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DataControl.CurrentItemProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.DataControl.CurrentItem"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DataControl.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.DataControl.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DataControl.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.DataControl.SelectedItem"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DataControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.Rebind">
            <summary>
            Rebinds the grid.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.InitializeSelection">
            <summary>
            Initializes the selection handler.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.CreateTableDefinition">
            <summary>
            Creates the specific table definition for the <see cref="T:Telerik.Windows.Controls.DataControl"/>.
            </summary>
            <returns>The newly created <see cref="P:Telerik.Windows.Controls.DataControl.TableDefinition"/>.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.OnItemsSourceChanged(System.Object,System.Object)">
            <summary>
            Called when ItemsSource property has changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.OnCurrentItemChanged">
            <summary>
            Called when the current item of the <see cref="T:Telerik.Windows.Controls.DataControl"/> is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.RaiseSelectionChangedEvent(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Raises the selection changed event.
            </summary>
            <param name="addedItems">List of all data records were added to the selection.</param>
            <param name="removedItems">List of all data records that were removed from the selection.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.RaiseSelectionChangedEvent(Telerik.Windows.Controls.SelectionChangeEventArgs)">
            <summary>
            Raises the selection changed event.
            </summary>
            <param name="args">The <see cref="T:Telerik.Windows.Controls.SelectionChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.SetIsSelected(System.Object,System.Boolean)">
            <summary>
            Sets the selection state for a container that wraps a given data item.
            </summary>
            <param name="item">The data item.</param>
            <param name="isSelected">if set to <c>true</c> container is selected.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.SetIsCurrent(System.Object,System.Boolean)">
            <summary>
            Sets the current state for a container that wraps a given data item.
            </summary>
            <param name="item">The data item.</param>
            <param name="isCurrent">if set to <c>true</c> container is current.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.DataControl.CurrentRecordProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.DataControl.CurrentRecord"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.DataControl.SelectedRecordProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.DataControl.SelectedRecord"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DataControl.FindRecord(System.Object)">
            <summary>
            Finds the record wrapping the specified data item.
            </summary>
            <param name="dataItem">The data item to find teh record for.</param>
            <returns></returns>
        </member>
        <member name="E:Telerik.Windows.Controls.DataControl.SelectionChanged">
            <summary>
            Occurs when the selected items have changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of the <see cref="T:Telerik.Windows.Controls.DataControl"/>. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.Items">
            <summary>
            Gets the collection used to generate the content of the <see cref="T:Telerik.Windows.Controls.DataControl"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.TableDefinition">
            <summary>
            Gets the TableDefinition object for the current record collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
            <value>The current item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <value>The selected items.</value>
        </member>
        <member name="E:Telerik.Windows.Controls.DataControl.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.CurrentRecord">
            <summary>
            Gets or sets the current record.
            </summary>
            <value>The current record.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.SelectedRecord">
            <summary>
            Gets the selected record.
            </summary>
            <value>The selected record.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.SelectedRecords">
            <summary>
            Gets the selected records.
            </summary>
            <value>The selected records.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.DataControl.Records">
            <summary>
            Gets the top-level records list.
            The list of records contains the data records that are sorted according to the provided sort descriptions.
            When grouping has been defined, the list contains a GroupRecord objects that may contain other GroupRecord ones or data records.
            </summary>
            <value>The records.</value>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FakePropertyDescriptor"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            True if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FakePropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            True if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.FakePropertyDescriptor.Name">
            <summary>
            Gets the name of the member.
            </summary>
            <value></value>
            <returns>
            The name of the member.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.FakePropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.FakePropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <value></value>
            <returns>true if the property is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.FakePropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/> that represents the type of the property.</returns>
        </member>
        <member name="T:Telerik.Windows.Data.Dynamic.DynamicQueryable">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Where``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Where(System.Linq.IQueryable,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Select(System.Linq.IQueryable,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.OrderBy(System.Linq.IQueryable,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Take(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Skip(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.GroupBy(System.Linq.IQueryable,System.String,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Any(System.Linq.IQueryable)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.Count(System.Linq.IQueryable)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicQueryable.ElementAt(System.Linq.IQueryable,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:Telerik.Windows.Data.Dynamic.DynamicClass">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicClass.ToString">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:Telerik.Windows.Data.Dynamic.DynamicProperty">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicProperty.#ctor(System.String,System.Type)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="P:Telerik.Windows.Data.Dynamic.DynamicProperty.Name">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="P:Telerik.Windows.Data.Dynamic.DynamicProperty.Type">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:Telerik.Windows.Data.Dynamic.DynamicExpression">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.Parse(System.Type,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.ParseLambda``2(System.String,System.Object[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.CreateClass(Telerik.Windows.Data.Dynamic.DynamicProperty[])">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.DynamicExpression.CreateClass(System.Collections.Generic.IEnumerable{Telerik.Windows.Data.Dynamic.DynamicProperty})">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:Telerik.Windows.Data.Dynamic.ParseException">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.ParseException.#ctor(System.String,System.Int32)">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Dynamic.ParseException.ToString">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="P:Telerik.Windows.Data.Dynamic.ParseException.Position">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="T:Telerik.Windows.Data.CompositeFilterDescription">
            <summary>
            Represents a filtering description which serves as a container for one or more child filtering descriptions.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.FilterDescription">
            <summary>
            The class enables implementation of custom filtering logic.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.FilterDescriptorBase">
            <summary>
            Base class for all <see cref="T:Telerik.Windows.Data.IFilterDescriptor"/> used for 
            handling the logic for property changed notifications.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IFilterDescriptor">
            <summary>
            Represents a filtering abstraction that knows how to create predicate filtering expression.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates a filter expression by delegating its creation to 
            <see cref="M:Telerik.Windows.Data.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)"/>, if 
            <paramref name="instance"/> is <see cref="T:System.Linq.Expressions.ParameterExpression"/>, otherwise throws <see cref="T:System.ArgumentException"/>
            </summary>
            <param name="instance">The instance expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
            <exception cref="T:System.ArgumentException">Parameter should be of type <see cref="T:System.Linq.Expressions.ParameterExpression"/></exception>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptorBase.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression used for collection filtering.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptorBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.FilterDescriptorBase.PropertyChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptorBase.OnPropertyChanged(System.String)">
            <summary>
            Calls <see cref="M:Telerik.Windows.Data.FilterDescriptorBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"/>
            creating a new instance of <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> with given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">Name of the property that is changed.</param>
        </member>
        <member name="E:Telerik.Windows.Data.FilterDescriptorBase.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescription.SatisfiesFilter(System.Object)">
            <summary>
            The method checks whether the passed parameter satisfies filter criteria. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescription.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression that calls <see cref="M:Telerik.Windows.Data.FilterDescription.SatisfiesFilter(System.Object)"/>.
            </summary>
            <param name="parameterExpression">The parameter expression, which parameter 
            will be passed to <see cref="M:Telerik.Windows.Data.FilterDescription.SatisfiesFilter(System.Object)"/> method.</param>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescription.IsActive">
            <summary>
            If false <see cref="M:Telerik.Windows.Data.FilterDescription.SatisfiesFilter(System.Object)"/> will not execute.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CompositeFilterDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CompositeFilterDescription"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CompositeFilterDescription.SatisfiesFilter(System.Object)">
            <summary>
            The method checks whether the passed parameter satisfies filter criteria.
            </summary>
            <param name="dataItem"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.CompositeFilterDescription.FilterDescriptions">
            <summary>
            Gets the child filtering descriptions of the <see cref="T:Telerik.Windows.Data.CompositeFilterDescription"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.CompositeFilterDescription.IsActive">
            <summary>
            If false the grid will not execute <see cref="M:Telerik.Windows.Data.CompositeFilterDescription.SatisfiesFilter(System.Object)"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.CompositeFilterDescriptor">
            <summary>
            Represents a filtering descriptor which serves as a container for one or more child filtering descriptors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CompositeFilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression combining <see cref="P:Telerik.Windows.Data.CompositeFilterDescriptor.FilterDescriptors"/> 
            expressions with <see cref="P:Telerik.Windows.Data.CompositeFilterDescriptor.LogicalOperator"/>.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.CompositeFilterDescriptor.LogicalOperator">
            <summary>
            Gets or sets the logical operator used for composing of <see cref="P:Telerik.Windows.Data.CompositeFilterDescriptor.FilterDescriptors"/>.
            </summary>
            <value>The logical operator used for composition.</value>
        </member>
        <member name="P:Telerik.Windows.Data.CompositeFilterDescriptor.FilterDescriptors">
            <summary>
            Gets or sets the filter descriptors that will be used for composition.
            </summary>
            <value>The filter descriptors used for composition.</value>
        </member>
        <member name="T:Telerik.Windows.Data.FieldFilterDescription">
            <summary>
            Represents filter criteria object. Extends the functionality of the 
            <see cref="T:Telerik.Windows.Data.FilterDescription"/> class with ability to define 2 filter
            descriptors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldFilterDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FieldFilterDescription"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldFilterDescription.SatisfiesFilter(System.Object)">
            <summary>
            The method checks whether the passed parameter satisfies filter criteria.
            </summary>
            <param name="dataItem"></param>
        </member>
        <member name="M:Telerik.Windows.Data.FieldFilterDescription.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression composing <see cref="P:Telerik.Windows.Data.FieldFilterDescription.Filter1"/>, <see cref="P:Telerik.Windows.Data.FieldFilterDescription.Filter2"/> and
            <see cref="P:Telerik.Windows.Data.FieldFilterDescription.SelectedValues"/>.
            </summary>
            <param name="parameterExpression">The parameter expression, which parameter
            will be passed to <see cref="M:Telerik.Windows.Data.FieldFilterDescription.SatisfiesFilter(System.Object)"/> method.</param>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.IsActive">
            <summary>
            If false the grid will not execute <see cref="M:Telerik.Windows.Data.FilterDescription.SatisfiesFilter(System.Object)"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.DataType">
            <summary>
            Gets or sets the type of the data, displayed in the column that is being filtered.
            </summary>
            <value>The data type.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.Filter1">
            <summary>
            Gets the Filter1.
            </summary>
            <value>The Filter1.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.Filter2">
            <summary>
            Gets the Filter2.
            </summary>
            <value>The Filter2.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.AvailableActions">
            <summary>
            Gets a list, containing the available filter operators for the current <see cref="P:Telerik.Windows.Data.FieldFilterDescription.DataType"/>.
            </summary>
            <value>The available actions.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.DistinctValues">
            <summary>
            Gets the distinct values of the column data.
            </summary>
            <value>The distinct values.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.SelectedValues">
            <summary>
            Gets the distinct values that will be used to filter the column.
            </summary>
            <value>The selected values.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldFilterDescription.FieldName">
            <summary>
            Gets or sets the name of the data field that will be used for filtering.
            </summary>
            <value>The name of the data field.</value>
        </member>
        <member name="T:Telerik.Windows.Data.GenericEnumerable`1">
            <summary>
            This type is used internally by the data binding infrastructure and is not intended to be used directly from your code.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.GenericEnumerable`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.GenericEnumerable`1"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="T:Telerik.Windows.Data.FilterDescriptor">
            <summary>
            Represents declarative filtering.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FilterDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.#ctor(System.String,Telerik.Windows.Data.FilterOperator,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FilterDescriptor"/> class.
            </summary>
            <param name="member">The member.</param>
            <param name="filterOperator">The filter operator.</param>
            <param name="filterValue">The filter value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.#ctor(System.String,Telerik.Windows.Data.FilterOperator,System.Object,System.Windows.Data.IValueConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FilterDescriptor"/> class.
            </summary>
            <param name="member">The member.</param>
            <param name="filterOperator">The filter operator.</param>
            <param name="filterValue">The filter value.</param>
            <param name="converter">IValueConverter value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.CreateFilterExpression(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Creates a predicate filter expression.
            </summary>
            <param name="parameterExpression">The parameter expression, which will be used for filtering.</param>
            <returns>A predicate filter expression.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.Equals(Telerik.Windows.Data.FilterDescriptor)">
            <summary>
            Determines whether the specified <paramref name="other"/> descriptor 
            is equal to the current one.
            </summary>
            <param name="other">The other filter descriptor.</param>
            <returns>
            True if all members of the current descriptor are 
            equal to the ones of <paramref name="other"/>, otherwise false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <paramref name="obj"/>
            is equal to the current descriptor.
            </summary>
            <returns>
            Calls <see cref="M:Telerik.Windows.Data.FilterDescriptor.Equals(Telerik.Windows.Data.FilterDescriptor)"/> 
            if <paramref name="obj"/> is <see cref="T:Telerik.Windows.Data.FilterDescriptor"/>, otherwise
            returns false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.FilterDescriptor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current filter descriptor.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for filtering.
            </summary>
            <filterValue>The member that will be used for filtering.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescriptor.MemberType">
            <summary>
            Gets or sets the type of the member that is used for filtering.
            Set this property if the member type cannot be resolved automatically.
            Such cases are: items with ICustomTypeDescriptor, XmlNode or DataRow.
            Changing this property did not raise 
            <see cref="E:Telerik.Windows.Data.FilterDescriptorBase.PropertyChanged"/> event.
            </summary>
            <value>The type of the member used for filtering.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescriptor.Operator">
            <summary>
            Gets or sets the filter operator.
            </summary>
            <filterValue>The filter operator.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescriptor.Value">
            <summary>
            Gets or sets the target filter value.
            </summary>
            <filterValue>The filter value.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.FilterDescriptor.ConvertedValue">
            <summary>
            Gets the target filter converted value.
            </summary>
            <filterValue>The filter converted value.</filterValue>
        </member>
        <member name="T:Telerik.Windows.Data.FilterDescriptorCollection">
            <summary>
            Represents collection of <see cref="T:Telerik.Windows.Data.IFilterDescriptor"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.ObservableItemCollection`1">
            <summary>
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> that also raises notifications when
            one of its items property is changed. The items in the collection should implement
            <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>. 
            </summary>
            <typeparam name="T">Type of the items in the collection. It should implement <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.ObservableItemCollection`1.OnItemChanged(Telerik.Windows.Data.ItemChangedEventArgs{`0})">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.ObservableItemCollection`1.ItemChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Windows.Data.ItemChangedEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.ObservableItemCollection`1.ClearItems">
            <summary>
            Unsubscribes from all items <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ObservableItemCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Subscribes for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event of the new element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ObservableItemCollection`1.RemoveItem(System.Int32)">
            <summary>
            Unsubscribes for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event of the removed element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ObservableItemCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Unsubscribes for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event of the removed element and 
            subscribes for the new element's event.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.ObservableItemCollection`1.ItemChanged">
            <summary>
            Raised when some collection item's property is changed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.FilterCompositionLogicalOperator">
            <summary>
            Logical operator used for filter descriptor composition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterCompositionLogicalOperator.And">
            <summary>
            Combines filters with logical AND.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterCompositionLogicalOperator.Or">
            <summary>
            Combines filters with logical OR.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.EnumerableAggregateFunction">
            <summary>
            Represents an <see cref="T:Telerik.Windows.Data.AggregateFunction"/> that uses aggregate extension 
            methods provided in <see cref="T:System.Linq.Enumerable"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.EnumerableAggregateFunctionBase">
            <summary>
            Base class for all aggregate functions that will use extension 
            methods in <see cref="T:System.Linq.Enumerable"/> for aggregation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.AggregateFunction">
            <summary>
            Represents the basic class that supports creating functions that provide statistical information about a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>The result of the function called on the items of the group.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates the aggregate expression that is used for constructing expression 
            tree that will calculate the aggregate result.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateFunction.GenerateFunctionName">
            <summary>
            Generates default name for this function using this type's name.
            </summary>
            <returns>
            Function name generated with the following pattern: 
            {<see cref="M:System.Object.GetType"/>.<see cref="P:System.Reflection.MemberInfo.Name"/>}_{<see cref="M:System.Object.GetHashCode"/>}
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunction.Caption">
            <summary>
            Gets or sets the informative message to display as an illustration of the aggregate function.
            </summary>
            <value>The caption to display as an illustration of the aggregate function.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunction.Name">
            <summary>
            Gets or sets the name of the aggregate function, which appears as a property of the group record on which records the function works.
            </summary>
            <value>The name of the function as visible from the group record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunction.FunctionName">
            <summary>
            Gets or sets the name of the aggregate function, which appears as a property of the group record on which records the function works.
            </summary>
            <value>The name of the function as visible from the group record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunction.SourceField">
            <summary>
            Gets or sets the name of the field, of the item from the set of items, which value is used as the argument of the aggregate function.
            </summary>
            <value>The name of the field to get the argument value from.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunction.ResultFormatString">
            <summary>
            Gets or sets a string that is used to format the result value.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="M:Telerik.Windows.Data.EnumerableAggregateFunctionBase.GenerateFunctionName">
            <summary>
            Generates default name for this function using <see cref="P:Telerik.Windows.Data.EnumerableAggregateFunctionBase.AggregateMethodName"/> 
            and <see cref="P:Telerik.Windows.Data.AggregateFunction.SourceField"/>.
            </summary>
            <returns>
            Function name generated with the following pattern: 
            {<see cref="P:Telerik.Windows.Data.EnumerableAggregateFunctionBase.AggregateMethodName"/>}{<see cref="P:Telerik.Windows.Data.AggregateFunction.SourceField"/>}_{<see cref="M:System.Object.GetHashCode"/>}
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.EnumerableAggregateFunctionBase.AggregateMethodName">
            <summary>
            Gets the name of the aggregate method on the <see cref="P:Telerik.Windows.Data.EnumerableAggregateFunctionBase.ExtensionMethodsType"/>
            that will be used for aggregation.
            </summary>
            <value>The name of the aggregate method that will be used.</value>
        </member>
        <member name="P:Telerik.Windows.Data.EnumerableAggregateFunctionBase.ExtensionMethodsType">
            <summary>
            Gets the type of the extension methods that holds the extension methods for
            aggregation. For example <see cref="T:System.Linq.Enumerable"/> or <see cref="T:System.Linq.Queryable"/>.
            </summary>
            <value>
            The type of that holds the extension methods. The default value is <see cref="T:System.Linq.Enumerable"/>.
            </value>
        </member>
        <member name="M:Telerik.Windows.Data.EnumerableAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates the aggregate expression using <see cref="T:Telerik.Windows.Data.Expressions.EnumerableAggregateFunctionExpressionBuilder"/>.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Data.EnumerableSelectorAggregateFunction">
            <summary>
            Represents an <see cref="T:Telerik.Windows.Data.AggregateFunction"/> that uses aggregate extension 
            methods provided in <see cref="T:System.Linq.Enumerable"/> using <see cref="P:Telerik.Windows.Data.AggregateFunction.SourceField"/>
            as a member selector.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.EnumerableSelectorAggregateFunction.CreateAggregateExpression(System.Linq.Expressions.Expression)">
            <summary>
            Creates the aggregate expression using <see cref="T:Telerik.Windows.Data.Expressions.EnumerableSelectorAggregateFunctionExpressionBuilder"/>.
            </summary>
            <param name="enumerableExpression">The grouping expression.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Data.RadSortDescriptionCollection">
            <summary>
            Represents a collection of sort descriptions.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.AggregateFunctionsGroup">
            <summary>
            Represents group with aggregate functions.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.Group">
            <summary>
            Represents an item that is created after grouping.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IGroup">
            <summary>
            Represents an item that is created after grouping.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IGroup.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IGroup.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IGroup.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has sub groups.
            </summary>
            <value>
            	<c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.IGroup.ItemCount">
            <summary>
            Gets the <see cref="P:Telerik.Windows.Data.IGroup.Items"/> count.
            </summary>
            <value>The <see cref="P:Telerik.Windows.Data.IGroup.Items"/> count.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IGroup.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:Telerik.Windows.Data.IGroup.HasSubgroups"/> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Group.HasSubgroups">
            <summary>
            Gets a value indicating whether this instance has any sub groups.
            </summary>
            <value>
            	<c>true</c> if this instance has sub groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Group.ItemCount">
            <summary>
            Gets the number of items in this group.
            </summary>
            <value>The items count.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Group.Subgroups">
            <summary>
            Gets the subgroups, if <see cref="P:Telerik.Windows.Data.Group.HasSubgroups"/> is true, otherwise empty collection.
            </summary>
            <value>The subgroups.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Group.Items">
            <summary>
            Gets the items in this groups.
            </summary>
            <value>The items in this group.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Group.Key">
            <summary>
            Gets the key for this group.
            </summary>
            <value>The key for this group.</value>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateFunctionsGroup.GetAggregateResults(System.Collections.Generic.IEnumerable{Telerik.Windows.Data.AggregateFunction})">
            <summary>
            Gets the aggregate results generated for the given aggregate functions.
            </summary>
            <value>The aggregate results for the provided aggregate functions.</value>
            <exception cref="T:System.ArgumentNullException"><c>functions</c> is null.</exception>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateFunctionsGroup.AggregateFunctionsProjection">
            <summary>
            Gets or sets the aggregate functions projection for this group. 
            This projection is used to generate aggregate functions results for this group.
            </summary>
            <value>The aggregate functions projection.</value>
        </member>
        <member name="T:Telerik.Windows.Data.CancelEventArgs">
            <summary>Provides data for a cancelable event.</summary>
        </member>
        <member name="M:Telerik.Windows.Data.CancelEventArgs.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CancelEventArgs"></see> class with the <see cref="P:Telerik.Windows.Data.CancelEventArgs.Cancel"></see> property set to false.</summary>
        </member>
        <member name="M:Telerik.Windows.Data.CancelEventArgs.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CancelEventArgs"></see> class with the <see cref="P:Telerik.Windows.Data.CancelEventArgs.Cancel"></see> property set to the given value.</summary>
            <param name="cancel">true to cancel the event; otherwise, false. </param>
        </member>
        <member name="P:Telerik.Windows.Data.CancelEventArgs.Cancel">
            <summary>Gets or sets a value indicating whether the event should be canceled.</summary>
            <returns>true if the event should be canceled; otherwise, false.</returns>
        </member>
        <member name="T:Telerik.Windows.Data.GroupDescriptorCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Data.GroupDescriptor"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.PageChangingEventArgs">
            <summary>Provides data for notifications when the page index is changing.</summary>
        </member>
        <member name="M:Telerik.Windows.Data.PageChangingEventArgs.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Telerik.Windows.Data.PageChangingEventArgs" /> class.</summary>
            <param name="newPageIndex">The index of the requested page.</param>
        </member>
        <member name="P:Telerik.Windows.Data.PageChangingEventArgs.NewPageIndex">
            <summary>Gets the index of the requested page.</summary>
            <returns>The index of the requested page.</returns>
        </member>
        <member name="T:Telerik.Windows.Data.SortDescriptor">
            <summary>
            Represents declarative sorting.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.SortDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.SortDescriptor.PropertyChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.SortDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Calls <see cref="M:Telerik.Windows.Data.SortDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"/>
            passing a new instance of <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.
            </summary>
            <param name="propertyName">
            Name of the property that will be used for creating of <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.
            </param>
        </member>
        <member name="E:Telerik.Windows.Data.SortDescriptor.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.SortDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for sorting.
            </summary>
            <filterValue>The member that will be used for sorting.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.SortDescriptor.SortDirection">
            <summary>
            Gets or sets the sort direction for this sort descriptor. If the value is null
            no sorting will be applied.
            </summary>
            <value>The sort direction. The default value is null.</value>
        </member>
        <member name="T:Telerik.Windows.Data.SortDescriptorCollection">
            <summary>
            Represents collection of <see cref="T:Telerik.Windows.Data.SortDescriptor"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.ExpressionFactory.LiftStringExpressionToEmpty(System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">Provided expression should have string type</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.FilterExpressionBuilder.CreateFilterExpression">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.AggregateFunctionExpressionBuilderBase.#ctor(System.Linq.Expressions.Expression,Telerik.Windows.Data.AggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.AggregateFunctionExpressionBuilderBase.ExtractItemTypeFromEnumerableType(System.Type)">
            <exception cref="T:System.ArgumentException">Provided type is not <see cref="T:System.Collections.Generic.IEnumerable`1"/></exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.EnumerableAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,Telerik.Windows.Data.EnumerableAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.EnumerableSelectorAggregateFunctionExpressionBuilder.#ctor(System.Linq.Expressions.Expression,Telerik.Windows.Data.EnumerableSelectorAggregateFunction)">
            <exception cref="T:System.ArgumentException">
            Provided <paramref name="enumerableExpression"/>'s <see cref="P:System.Linq.Expressions.Expression.Type"/> is not <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </exception>
        </member>
        <member name="T:Telerik.Windows.Data.Expressions.CustomTypeDescriptorExtensions">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.CustomTypeDescriptorExtensions.Property``1(System.ComponentModel.ICustomTypeDescriptor,System.String)">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.FilterDescriptorExpressionBuilder.CreateBodyExpression">
            <exception cref="T:System.ArgumentException"><c>ArgumentException</c>.</exception>
        </member>
        <member name="T:Telerik.Windows.Data.FilterOperator">
            <summary>
            Operator used in <see cref="T:Telerik.Windows.Data.FilterDescription"/>
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsLessThan">
            <summary>
            Left operand must be smaller than the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsLessThanOrEqualTo">
            <summary>
            Left operand must be smaller than or equal to the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsEqualTo">
            <summary>
            Left operand must be equal to the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsNotEqualTo">
            <summary>
            Left operand must be different from the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsGreaterThanOrEqualTo">
            <summary>
            Left operand must be larger than the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsGreaterThan">
            <summary>
            Left operand must be larger than or equal to the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.StartsWith">
            <summary>
            Left operand must start with the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.EndsWith">
            <summary>
            Left operand must end with the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.Contains">
            <summary>
            Left operand must contain the right one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.FilterOperator.IsContainedIn">
            <summary>
            Left operand must be contained in the right one.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.FilterOperatorExtensions.CreateExpression(Telerik.Windows.Data.FilterOperator,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:Telerik.Windows.Data.GroupDescriptor">
            <summary>
            Represents grouping criteria.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.GroupDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.GroupDescriptor.PropertyChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.GroupDescriptor.OnPropertyChanged(System.String)">
            <summary>
            Calls <see cref="M:Telerik.Windows.Data.GroupDescriptor.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"/>
            passing a new instance of <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.
            </summary>
            <param name="propertyName">
            Name of the property that will be used for creating of <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.
            </param>
        </member>
        <member name="M:Telerik.Windows.Data.GroupDescriptor.CycleSortDirection">
            <summary>
            Changes the <see cref="T:Telerik.Windows.Data.SortDescriptor"/> to next logical value.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.GroupDescriptor.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.GroupDescriptor.Member">
            <summary>
            Gets or sets the member name which will be used for sorting.
            </summary>
            <filterValue>The member that will be used for sorting.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.GroupDescriptor.DisplayContent">
            <summary>
            Gets or sets the content which will be used from UI.
            </summary>
            <filterValue>The content that will be used from UI.</filterValue>
        </member>
        <member name="P:Telerik.Windows.Data.GroupDescriptor.SortDirection">
            <summary>
            Gets or sets the sort direction for this sort descriptor. If the value is null
            no sorting will be applied.
            </summary>
            <value>The sort direction. The default value is null.</value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupDescriptor.AggregateFunctions">
            <summary>
            Gets or sets the aggregate functions used when grouping is executed.
            </summary>
            <value>The aggregate functions that will be used in grouping.</value>
        </member>
        <member name="T:Telerik.Windows.Data.ItemChangedEventArgs`1">
            <summary>
            Contains data about the item's property that has been changed.
            </summary>
            <typeparam name="T">Type of the changed item.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.ItemChangedEventArgs`1.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.ItemChangedEventArgs`1"/> class.
            </summary>
            <param name="item">The item that has been changed.</param>
            <param name="propertyName">Name of the property that have been changed.</param>
        </member>
        <member name="P:Telerik.Windows.Data.ItemChangedEventArgs`1.Item">
            <summary>
            Gets the item that has been changed.
            </summary>
            <value>The item that has been changed.</value>
        </member>
        <member name="P:Telerik.Windows.Data.ItemChangedEventArgs`1.PropertyName">
            <summary>
            Gets the name of the property that has been changed.
            </summary>
            <value>The name of the property that has been changed.</value>
        </member>
        <member name="T:Telerik.Windows.Data.ObjectDataBinder">
            <summary>
            Get or sets values of objects by using WPF data binding.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ObjectDataBinder.GetValue(System.Object,System.String)">
            <summary>
            Gets the value from the specified binding source, at the specified property path.
            </summary>
            <param name="bindingSource">The binding source to get the value from.</param>
            <param name="propertyPath">The path to the property of the binding source containing the value to get.</param>
            <returns>The value from the specified binding source, at the specified property path.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.ObjectDataBinder.SetValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value at the specified property path of the specified binding source.
            </summary>
            <param name="bindingSource">The binding source to set the value in.</param>
            <param name="propertyPath">The path to the property of the binding source containing the value to set.</param>
            <param name="value">The new value to set.</param>
            <returns>A value indicating if the value was changed, that is, if the new and the old value are the same.</returns>
        </member>
        <member name="T:Telerik.Windows.Data.ObjectDataBinder.ValueSetter">
            <summary>
            Serves to set a property value by using WPF data binding. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IDataRecord">
            <summary>
            Provides information about the location of a record in a data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.IDataRecord.DataSourceIndex">
            <summary>
            Gets or sets the index of the data, represented by the record, in its source.
            </summary>
            <value>The index of the data, represented by the record, in its source.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataRecord.GroupIndex">
            <summary>
            Gets or sets the index of the group in which the record is located.
            </summary>
            <value>The index of the group in which the record is located.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataRecord.IsDisconnected">
            <summary>
            Returns a value indicating if the current record is connected to the data source.
            Disconnected records are typically newly-added ones that have not been processed by the data engine.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.VirtualizingRecordCollection">
            <summary>
            Represents a collection of rows which can be virtualized, i.e. a row can be created on demand.
            </summary>
            <summary>
            Represents a collection of rows which can be virtualized, i.e. a row can be created on demand.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.VirtualizingRecordCollection"/> class.
            </summary>
            <remark>
            The class represents a collection of rows which can be virtualized, i.e. a row can be created on demand.
            </remark>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.#ctor(System.Collections.Generic.IList{Telerik.Windows.Data.Record})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.VirtualizingRecordCollection"/> class.
            </summary>
            <remark>
            The class represents a collection of rows which can be virtualized, i.e. a row can be created on demand.
            </remark>
            <param name="records">The rows with which this collection will work and possibly virtualize.</param>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.IndexOf(Telerik.Windows.Data.Record)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.Insert(System.Int32,Telerik.Windows.Data.Record)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.Add(Telerik.Windows.Data.Record)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.	
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. 
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.Contains(Telerik.Windows.Data.Record)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.CopyTo(Telerik.Windows.Data.Record[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at 
            a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from 
            <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of 
            	<paramref name="array"/>.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> 
            	is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.Remove(Telerik.Windows.Data.Record)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise
            , false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.
            Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.VirtualizingRecordCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event 
            data.</param>
        </member>
        <member name="E:Telerik.Windows.Data.VirtualizingRecordCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.VirtualizingRecordCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.VirtualizingRecordCollection.RealRecords">
            <summary>
            Gets or sets the rows with which this collection will work and possibly virtualize.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.VirtualizingRecordCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.VirtualizingRecordCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.VirtualizingRecordCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.Record"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.MemberAccessTokenExtensions.CreateMemberAccessExpression(Telerik.Windows.Data.Expressions.IMemberAccessToken,System.Linq.Expressions.Expression)">
            <exception cref="T:System.ArgumentException">
            Invalid name for property or field; or indexer with the specified arguments.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.MemberAccessTokenExtensions.GetMemberInfoForType(Telerik.Windows.Data.Expressions.IMemberAccessToken,System.Type)">
            <exception cref="T:System.InvalidOperationException"><c>InvalidOperationException</c>.</exception>
        </member>
        <member name="T:Telerik.Windows.Data.Expressions.StringExtensions">
            <summary>
            Holds helper methods for string operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.StringExtensions.EndsWith(System.String,System.String,System.StringComparison)">
            <summary>
            Handles null values as arguments and calls original 
            <see cref="M:System.String.EndsWith(System.String,System.StringComparison)"/>, passing 
            <paramref name="value"/> and <paramref name="comparisonType"/> as arguments.
            </summary>
            <returns>True if <paramref name="target"/> and <paramref name="value"/> are null,
            False if one of them is null, otherwise calls original 
            <see cref="M:System.String.EndsWith(System.String,System.StringComparison)"/> method.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.StringExtensions.IndexOf(System.String,System.String,System.StringComparison)">
            <summary>
            Handles null values as arguments and calls original 
            <see cref="M:System.String.IndexOf(System.String,System.StringComparison)"/>, passing 
            <paramref name="value"/> and <paramref name="comparisonType"/> as arguments.
            </summary>
            <returns>-1 if <paramref name="target"/> or <paramref name="value"/> are null,
            otherwise calls original
            <see cref="M:System.String.IndexOf(System.String,System.StringComparison)"/> method.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.StringExtensions.StartsWith(System.String,System.String,System.StringComparison)">
            <summary>
            Handles null values as arguments and calls original 
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)"/>, passing 
            <paramref name="value"/> and <paramref name="comparisonType"/> as arguments.
            </summary>
            <returns>True if <paramref name="target"/> and <paramref name="value"/> are null,
            False if one of them is null, otherwise calls original 
            <see cref="M:System.String.StartsWith(System.String,System.StringComparison)"/> method.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.UnboxT`1.ValueField(System.Object)">
            <exception cref="T:System.InvalidCastException"><c>InvalidCastException</c>.</exception>
        </member>
        <member name="T:Telerik.Windows.Data.Expressions.XmlNodeExtensions">
            <summary>
            Holds extension methods for <see cref="T:System.Xml.XmlNode"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.XmlNodeExtensions.ChildElementInnerText(System.Xml.XmlNode,System.String)">
            <exception cref="T:System.ArgumentException">
            Child element with name specified by <paramref name="childName"/> does not exists.
            </exception>
        </member>
        <member name="M:Telerik.Windows.Data.Expressions.CustomTypeDescriptorPropertyAccessExpressionBuilder.#ctor(System.Type,System.Type,System.String)">
            <exception cref="T:System.ArgumentException"><paramref name="elementType"/> did not implement <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/>.</exception>
        </member>
        <member name="T:Telerik.Windows.Controls.IRowItem">
            <summary>
            Supports row-like UI elements.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.IRowItem.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IRowItem.Record">
            <summary>
            Gets or sets the record that the class implementing the <see cref="T:Telerik.Windows.Controls.IRowItem"/> interface represents.
            </summary>
            <value>The record.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.IRowItem.DataContext">
            <summary>
            Gets or sets the data context.
            </summary>
            <value>The data context.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.IRowItem.RowIndicatorVisibility">
            <summary>
            Gets or sets the row indicator visibility.
            </summary>
            <value>The row indicator visibility.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadRowItem">
            <summary>
            This class is a base class for all UI Rows.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.CurrentRecordChangedEvent">
            <summary>
            Raised when the <see cref="T:Telerik.Windows.Data.Record"/> of the <see cref="T:Telerik.Windows.Controls.RadRowItem"/> is changed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.IsAlternatingProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.RadRowItem.IsAlternating"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.IsCurrentProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.RadRowItem.IsCurrent"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.RadRowItem.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.SelectedEvent">
            <summary>
            Identifies the <see cref="E:Telerik.Windows.Controls.RadRowItem.Selected"/> routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.UnselectedEvent">
            <summary>
            Identifies the <see cref="E:Telerik.Windows.Controls.RadRowItem.Unselected"/> routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.IsCurrentChangedEvent">
            <summary>
            Identifies the <see cref="E:Telerik.Windows.Controls.RadRowItem.IsCurrentChanged"/> routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadRowItem.RowIndicatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.RadRowItem.RowIndicatorVisibility"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call ApplyTemplate/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.CreateIndentItem">
            <summary>
            Creates the item that fills in the indentation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.IsSelectable">
            <summary>
            Determines whether this instance is selectable.
            </summary>
            <returns>
            	<c>true</c> if this instance is selectable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.SelectionPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the selection was changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="rowSelectionArgs">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnRecordChanged(Telerik.Windows.Data.Record,Telerik.Windows.Data.Record)">
            <summary>
             When overridden in a derived class, it gives the ability to execute code after the Record property changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was released.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseEnter"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseMove"/> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnSelected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadRowItem.Selected"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnUnselected(Telerik.Windows.RadRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadRowItem.Unselected"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnIsCurrentChanged(System.Boolean)">
            <summary>
            Called when the value of the IsCurrent property is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.OnIsAlternatingChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsAlternating property changes.
            </summary>
            <param name="oldValue">new value</param>
            <param name="newValue">old value</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.Telerik#Windows#Controls#IRowItem#get_DataContext">
            <summary>
            This class is a base class for all UI Rows.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadRowItem.Telerik#Windows#Controls#IRowItem#set_DataContext(System.Object)">
            <summary>
            This class is a base class for all UI Rows.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadRowItem.Selected">
            <summary>
            Occurs when <see cref="P:Telerik.Windows.Controls.RadRowItem.IsSelected"/> property becomes true.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadRowItem.Unselected">
            <summary>
            Occurs when <see cref="P:Telerik.Windows.Controls.RadRowItem.IsSelected"/> property becomes false.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadRowItem.IsCurrentChanged">
            <summary>
            Occurs when <see cref="P:Telerik.Windows.Controls.RadRowItem.IsCurrent"/> property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.IsAlternating">
            <summary>
            Gets or sets a value indicating whether this row is alternating.
            </summary>
            <value>
            	<c>True</c> if this row is alternating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.RowIndicatorVisibility">
            <summary>
            Gets or sets the row indicator visibility.
            </summary>
            <value>The row indicator visibility.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.ActionOnLostFocus">
            <summary>
            Gets or sets the action on lost focus.
            </summary>
            <value>The action on lost focus.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.ValidationMode">
            <summary>
            Gets or sets the validation mode.
            </summary>
            <value>The validation mode.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Telerik.Windows.Controls.RadRowItem"/> is selected.
            </summary>
            <value>
            	<c>True</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Telerik.Windows.Controls.RadRowItem"/> is current.
            </summary>
            <value>
            	<c>True</c> if this instance is current; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadRowItem.Record">
            <summary>
            Gets or sets the record.
            </summary>
            <value>The record.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RowItemMouseEventArgs">
            <summary>
            Provides data for the MouseUp, MouseDown, and MouseMove events for the RadRowItem object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RowItemMouseEventArgs.FromMouseEvent(System.Windows.Input.MouseEventArgs,System.Windows.UIElement)">
            <summary>
            Creates the RowItemMouseEventArgs instance.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
            <param name="targetElement">The target element.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RowItemMouseEventArgs.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RowItemMouseEventArgs.LeftButton">
            <summary>
            Gets or sets the left button.
            </summary>
            <value>The left button.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RowItemMouseEventArgs.RightButton">
            <summary>
            Gets or sets the right button.
            </summary>
            <value>The right button.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangeEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChangeEventArgs.#ctor(System.Windows.Controls.Control,System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangeEventArgs.RemovedItems">
            <summary>
            Gets the old selection.
            Contains the previosly selected items
            <value>The old selection.</value>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangeEventArgs.AddedItems">
            <summary>
            Gets the new selection.
            Contains the currently selected items
            <value>The new selection.</value>
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangeEventArgs.RemovedRecords">
            <summary>
            Gets or sets the removed records.
            </summary>
            <value>The removed records.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangeEventArgs.AddedRecords">
            <summary>
            Gets or sets the added records.
            </summary>
            <value>The added records.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangeEventArgs.DataControl">
            <summary>
            Gets the sender.
            Returns  data control which raises the event
            <value>The sender.</value>
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionManager">
            <summary>
            Listens for the needed events of row items to manage their selection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.Selection.SelectionHandler">
            <summary>
            This class supports Selection infrastructure and is not intended to be used directly from your code.
            </summary>
            <summary>
            This class supports Selection infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.TraversalDirection">
            <summary>
            Specifies the direction of tree traversal
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.TraversalDirection.Up">
            <summary>
            Traversing should go up
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.TraversalDirection.Down">
            <summary>
            Traversing should go down
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.PartialTrustAssemblyName">
            <summary>
            Represents a full name of an assembly which can also be obtained in partial trust environments.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.PartialTrustAssemblyName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.PartialTrustAssemblyName"/> class.
            </summary>
            <param name="assemblyFullName">The full name of the assembly to get the name components from.</param>
        </member>
        <member name="P:Telerik.Windows.Data.PartialTrustAssemblyName.Name">
            <summary>
            Gets or sets the simple name of the assembly. This is usually, but not necessarily, 
            the file name of the manifest file of the assembly, minus its extension.
            </summary>
            <value>A string that is the simple name of the assembly..</value>
        </member>
        <member name="P:Telerik.Windows.Data.PartialTrustAssemblyName.Version">
            <summary>
            Gets or sets the major, minor, build, and revision numbers of the assembly.
            </summary>
            <value>A System.Version object representing the major, minor, build, and revision numbers of the assembly.</value>
        </member>
        <member name="P:Telerik.Windows.Data.PartialTrustAssemblyName.CultureInfo">
            <summary>
            Gets or sets the culture supported by the assembly.
            </summary>
            <value>A System.Globalization.CultureInfo object representing the culture supported by the assembly.</value>
        </member>
        <member name="P:Telerik.Windows.Data.PartialTrustAssemblyName.PublicKeyToken">
            <summary>
            Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key 
            under which the application or assembly is signed.
            </summary>
            <value>An string containing the public key token.</value>
        </member>
        <member name="T:Telerik.Windows.Data.RelationBase">
            <summary>
            The abstract base class for all relations.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IRelation">
            <summary>
            This interface is used to connect parent and child table definitions.
            It provides a means for a child table to obtain its data items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IRelation.GetDataSource(Telerik.Windows.Data.RecordManager)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="recordManager">The record manager.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.IRelation.Name">
            <summary>
            Gets or sets the name of the relation.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IRelation.IsSelfReference">
            <summary>
            Gets or sets a value indicating whether this instance is self-reference.
            Self-reference relations are used when the child data contains the same objects
            as the master.
            </summary>
            <value>
            	<c>True</c> if this relation is a self-reference one; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Windows.Data.RelationBase.GetDataSource(Telerik.Windows.Data.RecordManager)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="recordManager">The RecordManager.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RelationBase.GetDataSource(System.Object,Telerik.Windows.Data.TableDefinition)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="context">The data context.</param>
            <param name="definition">The table definition.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.RelationBase.Name">
            <summary>
            Gets or sets the name of the relation.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RelationBase.IsSelfReference">
            <summary>
            Gets or sets a value indicating whether this instance is self-reference.
            Self-reference relations are used when the child data contains the same objects
            as the master.
            </summary>
            <value>
            	<c>True</c> if this relation is a self-reference one; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.DataTableExtensions">
            <summary>
            Provides extension methods which facilitate working with DataTables.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.DataTableExtensions.GetPropertyDescriptorCollection(System.Data.DataTable)">
            <summary>
            Gets the collection of property descriptors representing the columns of the DataTable.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.DataTableExtensions.GetColumnValue(System.Data.DataRowView,System.Data.DataColumn)">
            <summary>
            Gets the value of the cell located in the specified row view and the specified column.
            </summary>
            <param name="rowView">The row view in which the cell is located.</param>
            <param name="column">The column in which the cell is located.</param>
            <returns>The value of the found cell.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.DataTableExtensions.SetColumnValue(System.Data.DataRowView,System.Data.DataColumn,System.Object)">
            <summary>
            Sets the value of the cell located in the specified row view and the specified column.
            </summary>
            <param name="rowView">The row view in which the cell is located.</param>
            <param name="column">The column in which the cell is located.</param>
            <param name="value">The value to set as the new value of the cell.</param>
        </member>
        <member name="M:Telerik.Windows.Data.DataTableExtensions.IsSqlType(System.Data.DataColumn)">
            <summary>
            Determines whether the type corresponding to the specified column is an SQL type.
            </summary>
            <param name="column">The column which type is checked if it is an SQL type.</param>
            <returns>
            	<c>true</c> if the type corresponding to the specified column is an SQL type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Data.FieldDescriptor">
            <summary>
            Describes a field that wraps a data element from a user data source. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IDataFieldDescriptor">
            <summary>
            Supports classes that describe fields representing data.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.IFieldDescriptor">
            <summary>
            Supports classes that describe fields.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IFieldDescriptor.CreateField">
            <summary>
            Creates a field described by the descriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.IFieldDescriptor.UniqueName">
            <summary>
            Gets or sets the unique name of the field descriptor.
            </summary>
            <value>The name of the unique.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IFieldDescriptor.HeaderText">
            <summary>
            Gets or sets the header text of the descriptor when displayed in a user interface.
            </summary>
            <value>The header text of the descriptor when displayed in a user interface.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IFieldDescriptor.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the descriptor is read-only.
            </summary>
            <value>
            	<c>True</c> if the descriptor is read-only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Windows.Data.IDataFieldDescriptor.CanSort">
            <summary>
            Determines whether the data represented by the field descriptor can be sorted.
            </summary>
            <returns>
            	<c>True</c> if the data represented by the field descriptor can be sorted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.IDataFieldDescriptor.CanGroup">
            <summary>
            Determines whether the data represented by the field descriptor can be grouped.
            </summary>
            <returns>
            	<c>True</c> if the data represented by the field descriptor can be grouped; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.ItemType">
            <summary>
            Gets the type of the item that the field belongs to.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.DataType">
            <summary>
            Gets or sets the data type of the fields being described.
            </summary>
            <value>The data type of the fields being described.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.IsAutoGenerated">
            <summary>
            Gets or sets a value indicating whether the descriptor is automatically generated.
            </summary>
            <value>
            	<c>True</c> if the descriptor is automatically generated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.DataFormatString">
            <summary>
            Gets or sets the string that formats the data contained in the fields being described.
            </summary>
            <value>The string that formats the data contained in the fields being described.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.DataMemberPath">
            <summary>
            Gets or sets the path of the binding used to get the value of the member to display.
            </summary>
            <value>The path of the binding used to get the value of the member to display.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.DataMemberBinding">
            <summary>
            Gets or sets the binding which points to the data member to display in the cells of the <see cref="T:Telerik.Windows.Data.IDataFieldDescriptor"/>.
            </summary>
            <value>The display member binding.</value>
        </member>
        <member name="P:Telerik.Windows.Data.IDataFieldDescriptor.IsVisible">
            <summary>
            Gets or sets a value indicating whether the descriptor is visible in a user interface.
            </summary>
            <value>
            	<c>True</c> if the descriptor is visible in a user interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Telerik.Windows.Data.FieldDescriptor.CreateField">
            <summary>
            Creates a field described by the descriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.FieldDescriptor.CanSort">
            <summary>
            Determines whether the data represented by the field descriptor can be sorted.
            </summary>
            <returns>
            	<c>true</c> if the data represented by the field descriptor can be sorted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.FieldDescriptor.CanGroup">
            <summary>
            Determines whether the data represented by the field descriptor can be sorted.
            </summary>
            <returns>
            	<c>true</c> if the data represented by the field descriptor can be sorted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.HeaderText">
            <summary>
            Gets or sets the header text of the descriptor when displayed in a user interface.
            </summary>
            <value>
            The header text of the descriptor when displayed in a user interface.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.DataMemberPath">
            <summary>
            Gets or sets the path of the binding used to get the value of the member to display.
            </summary>
            <value>
            The path of the binding used to get the value of the member to display.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.DataMemberBinding">
            <summary>
            Gets or sets the binding which points to the data member to display in the cells of the <see cref="T:Telerik.Windows.Data.FieldDescriptor"/>.
            </summary>
            <value>The display member binding.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.UniqueName">
            <summary>
            Gets or sets the unique name of the field descriptor.
            </summary>
            <value>The unique name of the field descriptor..</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the descriptor is read-only.
            </summary>
            <value>
            	<c>True</c> if the descriptor is read-only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.DataFormatString">
            <summary>
            Gets or sets the string that formats the data contained in the fields being described.
            </summary>
            <value>
            The string that formats the data contained in the fields being described.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.ItemType">
            <summary>
            Gets the type of the item that the field belongs to.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.DataType">
            <summary>
            Gets or sets the data type of the fields being described.
            </summary>
            <value>The data type of the fields being described.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.IsDataBound">
            <summary>
            Gets or sets a value indicating whether this instance is data bound.
            </summary>
            <value>
            	<c>True</c> if this instance is data bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.IsAutoGenerated">
            <summary>
            Gets or sets a value indicating whether the descriptor is automatically generated.
            </summary>
            <value>
            	<c>True</c> if the descriptor is automatically generated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptor.IsVisible">
            <summary>
            Gets or sets a value indicating whether the descriptor is visible in a user interface.
            </summary>
            <value>
            	<c>True</c> if the descriptor is visible in a user interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.FieldDescriptorCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Windows.Data.FieldDescriptor"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.RadCollection`1">
            <summary>
            Represents a collection of Rad items.
            </summary>
            <typeparam name="T">The type of the items in the collection.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.RadCollection`1.#ctor">
            <summary>
            Initializes a new instance of the RadCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the RadCollection class.
            </summary>
            <param name="list">The list that is wrapped by the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadCollection`1.AddRange(System.Collections.Generic.IList{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:Telerik.Windows.Data.RadCollection`1"/>.
            </summary>
            <param name="items">The collection whose elements should be added to the end of <see cref="T:Telerik.Windows.Data.RadCollection`1"/>.
            The collection itself cannot be null, but it can contain elements that are null, but it can contain elements that are
            null, if type T is a reference type.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:Telerik.Windows.Data.RadCollection`1"/>.
            </summary>
            <param name="items">The collection whose elements should be added to the end of <see cref="T:Telerik.Windows.Data.RadCollection`1"/>.
            The collection itself cannot be null, but it can contain elements that are null, but it can contain elements that are
            null, if type T is a reference type.</param>
        </member>
        <member name="T:Telerik.Windows.Data.FieldDescriptorCollection.FieldCollectionChangedEventHandler">
            <summary>
            Fired when the field descriptor collection changes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.DataRecordCreateEventArgs">
            <summary>
            Provides data for the event that is raised when a data record is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.DataRecordCreateEventArgs.#ctor(System.Object,Telerik.Windows.Data.TableDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.DataRecordCreateEventArgs"/> class.
            </summary>
            <param name="data">The data represented by the created data record.</param>
            <param name="tableDefinition">The table definition of the created data record.</param>
        </member>
        <member name="M:Telerik.Windows.Data.DataRecordCreateEventArgs.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property with the specified name.
            </summary>
            <param name="propertyName">The name of the property which value is taken.</param>
            <returns>The obtained value of the property.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecordCreateEventArgs.IsExpandableRecord">
            <summary>
            Gets or sets a value indicating whether the created data record is expandable.
            </summary>
            <value>
            	<c>True</c> if this created data record is expandable record; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecordCreateEventArgs.Data">
            <summary>
            Gets the data represented by the created data record.
            </summary>
            <value>The data represented by the created data record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecordCreateEventArgs.ChildTableDefinitions">
            <summary>
            Gets the child table definitions of the created data record.
            </summary>
            <value>The child table definitions of the created data record.</value>
        </member>
        <member name="T:Telerik.Windows.Data.FieldDescriptorNamePairCollection">
            <summary>
            This collection contains pairs of field descriptor names.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.AggregateResult">
            <summary>
            Represents a result returned by an aggregate function.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateResult.#ctor(System.Object,System.Int32,Telerik.Windows.Data.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.AggregateResult"/> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="count">The number of arguments used for the calculation of the result.</param>
            <param name="function">Function that generated the result.</param>
            <exception cref="T:System.ArgumentNullException"><c>function</c> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateResult.#ctor(Telerik.Windows.Data.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.AggregateResult"/> class.
            </summary>
            <param name="function"><see cref="T:Telerik.Windows.Data.AggregateFunction"/> that generated the result.</param>
            <exception cref="T:System.ArgumentNullException"><c>function</c> is null.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateResult.#ctor(System.Object,Telerik.Windows.Data.AggregateFunction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.AggregateResult"/> class.
            </summary>
            <param name="value">The value of the result.</param>
            <param name="function"><see cref="T:Telerik.Windows.Data.AggregateFunction"/> that generated the result.</param>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateResult.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.AggregateResult.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="E:Telerik.Windows.Data.AggregateResult.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResult.Value">
            <summary>
            Gets or sets the value of the result.
            </summary>
            <value>The value of the result.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResult.FormattedValue">
            <summary>
            Gets the formatted value of the result.
            </summary>
            <value>The formatted value of the result.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResult.ItemCount">
            <summary>
            Gets or sets the number of arguments used for the calulation of the result.
            </summary>
            <value>The number of arguments used for the calulation of the result.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResult.Caption">
            <summary>
            Gets or sets the text which serves as a caption for the result in a user interface..
            </summary>
            <value>The text which serves as a caption for the result in a user interface.</value>
        </member>
        <member name="P:Telerik.Windows.Data.AggregateResult.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
            <value>The name of the function.</value>
        </member>
        <member name="T:Telerik.Windows.Data.AverageFunction">
            <summary>
            Represents a function that returns the arithmetic mean of a set of arguments.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.AverageFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.AverageFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.AverageFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.AverageFunction"/> class.
            </summary>
            <param name="propertyName">The name of the function as visible from the group record.</param>
            <param name="sourceField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.AverageFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.AverageFunction.AggregateMethodName">
            <summary>
            Gets the the Average method name.
            </summary>
            <value><c>Average</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.CountFunction">
            <summary>
            Represents a function that returns the number of items in a set of items, including nested sets.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CountFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CountFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.CountFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.CountFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="sourceField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.CountFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.CountFunction.AggregateMethodName">
            <summary>
            Gets the the Count method name.
            </summary>
            <value><c>Count</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.FirstFunction">
            <summary>
            Represents a function that returns the first item from a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FirstFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FirstFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FirstFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FirstFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="calculationField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.FirstFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the funcation from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.FirstFunction.AggregateMethodName">
            <summary>
            Gets the the First method name.
            </summary>
            <value><c>First</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.LastFunction">
            <summary>
            Represents a function that returns the last item from a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.LastFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.LastFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.LastFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.LastFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="calculationField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.LastFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.LastFunction.AggregateMethodName">
            <summary>
            Gets the the Last method name.
            </summary>
            <value><c>Last</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.MaxFunction">
            <summary>
            Represents a function that returns the greatest item from a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.MaxFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.MaxFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.MaxFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.MaxFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="calculationField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.MaxFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.MaxFunction.AggregateMethodName">
            <summary>
            Gets the the Max method name.
            </summary>
            <value><c>Max</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.MinFunction">
            <summary>
            Represents a function that returns the least item from a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.MinFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.MinFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.MinFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.MinFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="calculationField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.MinFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.MinFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value><c>Min</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection">
            <summary>
            Represents a collection of group descriptions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.InsertItem(System.Int32,Telerik.Windows.Data.RadGroupDescription)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The RadGroupDescription to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.SetItem(System.Int32,Telerik.Windows.Data.RadGroupDescription)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the item located at the specified old index to the specified new index.
            </summary>
            <param name="oldIndex">The index at which the item to move is located.</param>
            <param name="newIndex">The index to which the item at the old index is moved.</param>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than zero.-or-<paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Grouping.RadGroupDescriptionCollection.SetParentGroup(System.Int32,Telerik.Windows.Data.RadGroupDescription)">
            <summary>
            Sets the parent group for the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Telerik.Windows.Data.FieldDescriptorNamePair">
            <summary>
            This class represents a mapping between two fields names.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldDescriptorNamePair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FieldDescriptorNamePair"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldDescriptorNamePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FieldDescriptorNamePair"/> class.
            </summary>
            <param name="parentDescriptorFieldName">Name of the parent descriptor field.</param>
            <param name="childFieldDescriptorName">Name of the child field descriptor.</param>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptorNamePair.ParentFieldDescriptorName">
            <summary>
            Gets or sets the name of the parent field descriptor.
            This property points to the field descriptor from the parent data source in a relation.
            </summary>
            <value>The name of the parent field descriptor.</value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldDescriptorNamePair.ChildFieldDescriptorName">
            <summary>
            Gets or sets the name of the child field descriptor.
            This property points to the field descriptor from the child data source in a relation.
            </summary>
            <value>The name of the child field descriptor.</value>
        </member>
        <member name="T:Telerik.Windows.Data.SumFunction">
            <summary>
            Represents a function that returns the sum of all items from a set of items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.SumFunction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.SumFunction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.SumFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.SumFunction"/> class.
            </summary>
            <param name="functionName">The name of the function as visible from the group record.</param>
            <param name="sourceField">The name of the field to get the argument value from.</param>
            <param name="caption">The caption to display as an illustration of the aggregate function.</param>
        </member>
        <member name="M:Telerik.Windows.Data.SumFunction.Calculate(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Calculates the result of the aggregate function using the items in the specified group as argument providers.
            </summary>
            <param name="targetGroup">The group to take arguments for the function from.</param>
            <returns>
            The result of the function called on the items of the group.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Data.SumFunction.AggregateMethodName">
            <summary>
            Gets the the Min method name.
            </summary>
            <value><c>Min</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.IHierarchyFilter">
            <summary>
            Exposes methods that filter child collection in hierarchy mode.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IHierarchyFilter.FilteredCollection">
            <summary>
            Filters the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IHierarchyFilter.Initialize(System.Collections.IEnumerable,System.ComponentModel.PropertyDescriptorCollection,Telerik.Windows.Data.RadCollection{System.Object},Telerik.Windows.Data.FieldDescriptorNamePairCollection)">
            <summary>
            Initializes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="properties">The properties.</param>
            <param name="masterRecordValues">The master record values.</param>
            <param name="relationFieldNames">The relation field names.</param>
        </member>
        <member name="T:Telerik.Windows.Data.IRecordFactory">
            <summary>
            Supports classes that create different types of record as needed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.IRecordFactory.CreateRecord(System.Object)">
            <summary>
            Creates a record of the suitable type to properly wrap the specified data.
            </summary>
            <param name="data">The data to wrap in a record.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Data.PropertyRelation">
            <summary>
            This class represents a relation between a parent object and a collection of child objects that are
            accessible via a property on the master object.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.PropertyRelation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.PropertyRelation"/> class.
            </summary>
            <param name="parentPropertyName">Name of the parent property.</param>
        </member>
        <member name="M:Telerik.Windows.Data.PropertyRelation.GetDataSource(Telerik.Windows.Data.RecordManager)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="recordManager">The record manager.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.PropertyRelation.GetDataSource(System.Object,Telerik.Windows.Data.TableDefinition)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="context">The data context.</param>
            <param name="definition">The table definition.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.PropertyRelation.ParentPropertyName">
            <summary>
            Gets or sets the name of the property on the parent object.
            For example if the parent object is of type Customer and it has an Orders property that contains
            a collection of Order objects, then this property should be set to "Orders".
            </summary>
            <value>The name of the parent property.</value>
        </member>
        <member name="T:Telerik.Windows.Data.RadGridViewRecordFactory`1">
            <summary>
            Represents a factory for creating different types of records according to certain conditions.
            </summary>
            <typeparam name="TElement">The type of the data which the created records represents.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.RadGridViewRecordFactory`1.CreateRecord(System.Object)">
            <summary>
            Creates a record representing the supplied data object.
            </summary>
            <param name="data">The data object which is represented by the created row.</param>
            <returns>The created record representing the supplied data object.</returns>
        </member>
        <member name="T:Telerik.Windows.Data.TableDefinitionCreatedEventArgs">
            <summary>
            Provides data for the event that is fired when a table definition is created.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinitionCreatedEventArgs.#ctor(Telerik.Windows.Data.TableDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.TableDefinitionCreatedEventArgs"/> class.
            </summary>
            <param name="tableDefinition">The table definition which is created.</param>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinitionCreatedEventArgs.TableDefinition">
            <summary>
            Gets the table definition that is created.
            </summary>
            <value>The table definition that is created.</value>
        </member>
        <member name="T:Telerik.Windows.Data.TableRelation">
            <summary>
            This class represents a relation between two tables. It is similar to relations modelled with
            foreign keys in relational databases.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableRelation.GetDataSource(Telerik.Windows.Data.RecordManager)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="recordManager">The record manager.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.TableRelation.GetDataSource(System.Object,Telerik.Windows.Data.TableDefinition)">
            <summary>
            Gets the child data source.
            </summary>
            <param name="context">The data context.</param>
            <param name="definition">The table definition.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.TableRelation.FieldNames">
            <summary>
            Gets the field names.
            This collection contains mappings of columns from the master table to columns in the child table.
            </summary>
            <value>The field names.</value>
        </member>
        <member name="M:Telerik.Windows.Data.DependencyPropertyExtensions.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
            <summary>
            Registers a read-only dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">
            The name of the dependency property to register.
            </param>
            <param name="propertyType">
            The type of the property.
            </param>
            <param name="ownerType">
            The owner type that is registering the dependency property.
            </param>
            <param name="metadata">
            Property metadata for the dependency property.
            </param>
            <returns>
            A dependency property identifier that should be used to set the value of a public static readonly field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Data.ChangeOperation">
            <summary>
            Represents the different possible operations performed on a set of items.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Inserted">
            <summary>
            Indicates insert operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Removed">
            <summary>
            Indicates remove operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Set">
            <summary>
            Indicates that an item is set.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Clearing">
            <summary>
            Indicates that the items will be cleared.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Cleared">
            <summary>
            Indicates that the items are cleared.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Sorting">
            <summary>
            Indicates that the items will be sorted.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ChangeOperation.Sorted">
            <summary>
            Indicates that the items are sorted.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.Field">
            <summary>
            Represents a container for a data item displayed in a Rad control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Field.#ctor(Telerik.Windows.Data.Record,Telerik.Windows.Data.IDataFieldDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.Field"/> class.
            </summary>
            <param name="record">The record to which the field belongs.</param>
            <param name="fieldDescriptor">The field descriptor which specifies the data type and other properties of the field.</param>
        </member>
        <member name="M:Telerik.Windows.Data.Field.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.Field.PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Windows.Data.Field.IsContentValid">
            <summary>
            Gets or sets a value indicating whether the content (value) of the field failed validation.
            </summary>
            <value>
            	<c>true</c> if the content (value) of the field failed validation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Field.IsInEditMode">
            <summary>
            Gets or sets a value indicating whether the UI counterpart of the field is in edit mode.
            </summary>
            <value>
            	<c>true</c> if the UI counterpart of the field is in edit mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Field.Value">
            <summary>
            Gets or sets the value contained in the field.
            </summary>
            <value>The value contained in the field.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Field.Record">
            <summary>
            Gets the record to which the field belongs.
            </summary>
            <value>The record to which the field belongs.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Field.FieldDescriptor">
            <summary>
            Gets the field descriptor which specifies the data type and other properties of the field.
            </summary>
            <value>The field descriptor which specifies the data type and other properties of the field.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Field.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Telerik.Windows.Data.Field"/> is current.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:Telerik.Windows.Data.Field"/> is current; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Telerik.Windows.Data.Field.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.FieldCollection">
            <summary>
            Represents a collection of fields.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FieldCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.FieldCollection.#ctor(Telerik.Windows.Data.Record)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.FieldCollection"/> class.
            </summary>
            <param name="record">The record to which the fields in the collection belong.</param>
        </member>
        <member name="P:Telerik.Windows.Data.FieldCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.Field"/> at the specified index.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.FieldCollection.Item(Telerik.Windows.Data.IDataFieldDescriptor)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.Field"/> with the specified field descriptor.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Data.FieldCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.Field"/> with the specified unique name.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Data.DataSourceAdapter">
            <summary>
            Converts the object data source into an IEnumerable.
            Handles weak event subscriptions to data source events for the RecordManager.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.DataRecord">
            <summary>
            Represents a record which wraps a piece of data from a data source.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.Record">
            <summary>
            This class represents a single record in the data model.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Record.OnRecordManagerChanged">
            <summary>
            Called when the record manager is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Record.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Data.Record.PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Telerik.Windows.Data.Record.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.Record.RequestIsInEditModeChange">
            <summary>
            This event is used by the RadGridView scrolling infrastructure and is not meant to be used directly by your code.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Record.IsAlternating">
            <summary>
            Gets a value indicating whether this instance is alternating.
            This property is primarily intended to be used from XAML e.g. in triggers. Alternating rows are
            even rows that can have a slightly different appearance in order to be more readable.
            </summary>
            <value>
            	<c>True</c> if this instance is alternating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Record.IsInEditMode">
            <summary>
            Gets or sets a value indicating whether this instance is in edit mode.
            </summary>
            <value>
            	<c>True</c> if this instance is in edit mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Record.RecordManager">
            <summary>
            Gets or sets the record manager.
            Each record belongs to a virtual table that is described by the table definition and
            maintained by the RecordManager.
            </summary>
            <value>The record manager.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Record.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            Modifying this property will either add or remove the record from the record owner's
            SelectedRecords collection.
            </summary>
            <value>
            	<c>True</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Record.IsCurrent">
            <summary>
            Gets or sets a value indicating whether this instance is the current.
            </summary>
            <value>
            	<c>True</c> if this instance is current; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.Record.ParentGroup">
            <summary>
            Gets or sets the parent group group record.
            Top-level group records will have this property set to null.
            </summary>
            <remarks>This property will always contain a null value, if no grouping has been defined</remarks>
            <value>The parent group.</value>
        </member>
        <member name="M:Telerik.Windows.Data.DataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.DataRecord"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecord.Data">
            <summary>
            Gets or sets the data represented by the record.
            </summary>
            <value>The data represented by the record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecord.DataSourceIndex">
            <summary>
            Gets or sets the index of the data, represented by the record, in its source.
            </summary>
            <value>The index of the data, represented by the record, in its source.</value>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecord.GroupIndex">
            <summary>
            Gets or sets the index of the group in which the record is located.
            </summary>
            <value>The index of the group in which the record is located.</value>
        </member>
        <member name="P:Telerik.Windows.Data.DataRecord.IsDisconnected">
            <summary>
            Returns a value indicating if the current record is connected to the data source.
            Disconnected records are typically newly-added ones that have not been processed by the data engine.
            </summary>
            <value>True if disconnected; otherwise false.</value>
        </member>
        <member name="T:Telerik.Windows.Data.ExpandableDataRecord">
            <summary>
            Represents a data record which has child records and can be visually expanded or collapsed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ExpandableDataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.ExpandableDataRecord"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ExpandableDataRecord.ClearChildTableDefinitions">
            <summary>
            Clears the child table definitions of the record.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.ExpandableDataRecord.GetLevelInHierarchy">
            <summary>
            Gets the level in hierarchy.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.ExpandableDataRecord.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the visual element representing this record is expanded.
            </summary>
            <value>
            <c>True</c> if the visual element representing this record is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.GroupRecord">
            <summary>
            Represents a record that is able to be grouped according to one of its values.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.GroupRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.GroupRecord"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.GroupRecord.InvalidateAggregateResult(System.String)">
            <summary>
            Invalidates the result of an aggregate function with the specified name.
            </summary>
            <param name="functionName">The name of the aggregate function the result of which is invalidated.</param>
        </member>
        <member name="M:Telerik.Windows.Data.GroupRecord.GetAggregateResult(System.String)">
            <summary>
            Gets the result returned by the aggregate function with the specified name.
            </summary>
            <param name="functionName">The name of the aggregate function which returns the result.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.Records">
            <summary>
            Gets the records that are the result of a performed grouping.
            </summary>
            <value>The records that are the result of a performed grouping.</value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.HasChildGroups">
            <summary>
            Gets a value indicating whether the group record has child groups.
            </summary>
            <value>
            	<c>True</c> if the group record has child groups; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.Level">
            <summary>
            Gets or sets the level of this group record counted from the top of the grouping hierarchy.
            </summary>
            <value>The level of this group record counted from the top of the grouping hierarchy.</value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.Name">
            <summary>
            Gets or sets the name of .
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.Header">
            <summary>
            Gets or sets the content of the header that provides information about the group.
            </summary>
            <value>The content of the header that provides information about the group.</value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the visual element representing this record is expanded.
            </summary>
            <value>
            	<c>True</c> if the visual element representing this record is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.GroupRecord.ItemsCount">
            <summary>
            Gets the number of all items on all sub levels of the group record.
            </summary>
            <value>The number of all items on all sub levels of the group record.</value>
        </member>
        <member name="T:Telerik.Windows.Data.HeaderRecord">
            <summary>
            Represents a record that supplies the data for the header of a composite control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.RecordManager">
            <summary>
            The RecordManager class is the entry point for all data related operations.
            It takes care of sorting and grouping records as well as managing add/delete/edit operations 
            that affect the sort or group structure.
            The class manages a tabular record set and provides links to other tables when dealing with hierarchy.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.GetDistinctValues(System.String)">
            <summary>
            Gets the distinct values for the filed with the given name.
            These are used in distinct filtering.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.AddNewRecord(System.Object,System.Int32)">
            <summary>
            Adds the new record. The method takes into account the sort and group definitions to add
            the record to the correct group and position it at the right index.
            </summary>
            <param name="recordItem">The record data item.</param>
            <param name="index">The data source index at which the new record will be created. 
            Note that this index does not correspond to the index in the records collection 
            when having grouping or sorging.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.DeleteRecord(System.Int32)">
            <summary>
            Deletes the record at the specified data source index.
            The method will locate the record at that data source index and delete it from the records.
            The operation will affect any groups containing the record and will delete groups that become empty.
            </summary>
            <param name="index">The data source index.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.UpdateRecord(System.Int32,System.String)">
            <summary>
            Updates the record at the specified data source index.
            Whenever a data item gets modified it may need to be moved to another group if grouping is defined.
            </summary>
            <param name="index">The data source index.</param>
            <param name="fieldName">The name of the field used to update the distinct values used in filtering.</param>
            <remarks>
            If the data source supports change notifications (INotifyCollectionChanged or IBindingList data sources)
            updating a record will be handled automatically by the grid. When binding to a data source that does not support
            change notifications, you are responsible of calling this method whenever a data item changes.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.MoveRecord(System.Int32,System.Int32)">
            <summary>
            Moves the record.
            This method changes the order records are displayed by the grid. It will have effect only when
            no sorting has been defined.
            </summary>
            <remarks>
            If the data source supports change notifications (INotifyCollectionChanged or IBindingList data sources)
            moving a record will be handled automatically by the grid. When binding to a data source that does not support
            change notifications, you are responsible of calling this method whenever a data item changes.
            </remarks>
            <param name="moveFromIndex">From data source index.</param>
            <param name="moveToIndex">To data source index.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.FindRecord(System.Object)">
            <summary>
            Finds a record by its data item.
            </summary>
            <param name="recordDataItem">The data item.</param>
            <returns>A <see cref="T:Telerik.Windows.Data.Record">Record</see> instance.</returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.DataItemsEqual(System.Object,System.Object)">
            <summary>
            Gets a value indicating whether the two specified references point to the same data item.
            </summary>
            <param name="firstDataItem">The first reference to the data item.</param>
            <param name="secondDataItem">The second reference to the data item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.SuspendNotifications">
            <summary>
            Suspends all change notifications the <see cref="T:Telerik.Windows.Data.RecordManager"/> receives.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.ResumeNotifications">
            <summary>
            Resumes the notifications the <see cref="T:Telerik.Windows.Data.RecordManager"/> receives.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordManager.Initialize(Telerik.Windows.Data.TableDefinition)">
            <summary>
            Initializes the specified table definition.
            </summary>
            <param name="tableDef">The table definition to initialize.</param>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.FilterDescription">
            <summary>
            Gets or sets the filter description of the <see cref="P:Telerik.Windows.Data.RecordManager.FilterDescription"/>.
            </summary>
            <value>The filter description.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.FieldDescriptors">
            <summary>
            Gets the field descriptors.
            A field descriptor is an object that describes a common field that all records have.
            In a tabular data model the field descriptor is typically associated with a table column.
            </summary>
            <value>The field descriptors list.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.ChildTableDefinitions">
            <summary>
            Gets the child table definitions. These define the child tables in a hierarchy set up.
            </summary>
            <value>A collection containing the child table definitions.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.ParentRecordManager">
            <summary>
            Gets the parent record manager. This property contains the RecordManager object for the
            parent table in a hierarchy setup.
            </summary>
            <value>The parent record manager if the current record manager is not the root manager; otherwise null.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.Records">
            <summary>
            Gets the top-level records list.
            The list of records contains the data records that are sorted according to the provided sort descriptions.
            When grouping has been defined, the list contains a GroupRecord objects that may contain other GroupRecord ones or data records.
            </summary>
            <value>The records.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.SortDescriptions">
            <summary>
            Gets the sort descriptions collection.
            The collection contains a number of descriptions that define the sort order.
            </summary>
            <remarks>Modifying the collection will result in rebuilding the records tree.</remarks>
            <value>The sort descriptions.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.GroupDescriptions">
            <summary>
            Gets the group descriptions collection.
            The collection contains a number of descriptions that define the record grouping criteria.
            </summary>
            <remarks>Modifying the collection will result in rebuilding the records tree.</remarks>
            <value>The group descriptions.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.MasterRecord">
            <summary>
            Gets or sets the master record.
            In a hierarchy set up, this property points to the record from the upper hierarchy level that "owns" this record manager.
            </summary>
            <value>The master record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.TableDefinition">
            <summary>
            Gets the table definition.
            The table definition contains the settings for the current record set: field descriptors, etc.
            </summary>
            <value>The table definition.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordManager.CanCreateNewDataItem">
            <summary>
            Gets a value indicating whether this instance can create new appointment.
            </summary>
            <value>
            	<c>True</c> if this instance can create new appointment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.RadGroupDescription">
            <summary>
            Describes the grouping of items in Rad controls; supports parent groups, aggregate functions and sorting.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadGroupDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadGroupDescription"/> class.
            </summary>
            <param name="propertyName">Name of the property used to group data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadGroupDescription.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadGroupDescription"/> class.
            </summary>
            <param name="propertyName">Name of the property used to group data.</param>
            <param name="displayContent">The display content.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadGroupDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadGroupDescription"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadGroupDescription.#ctor(System.String,System.Object,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadGroupDescription"/> class.
            </summary>
            <param name="propertyName">Name of the property used to group data.</param>
            <param name="displayContent">The display content.</param>
            <param name="sortDirection">The sort direction.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RadGroupDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadGroupDescription"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadGroupDescription.DisplayContent">
            <summary>
            Gets or sets the display content of the GridViewGroupPanelCell object.
            </summary>
            <value>The display content.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RadGroupDescription.SortDirection">
            <summary>
            Gets or sets the sort direction in which groups will be displayed.
            </summary>
            <remarks>
            Note that unline a SortDescription setting, this value orders groups instead of items within groups.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Data.RadGroupDescription.AggregateFunctions">
            <summary>
            Gets an observable collection of the aggregate functions defined for the group description.
            </summary>
            <value>The aggregate functions.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RadGroupDescription.InheritedAggregateFunctions">
            <summary>
            Gets a list containing the aggregate functions. 
            The list contains both the aggregate functions for the current group description as well as 
            the ones defined by parent group descriptions.
            </summary>
            <value>The inherited aggregate functions.</value>
        </member>
        <member name="T:Telerik.Windows.Data.RequestIsInEditModeChangeEventArgs">
            <summary>
            This class is used by the RadGridView scrolling infrastructure and is not meant to be used directly by your code.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RequestIsInEditModeChangeEventArgs.IsInEditMode">
            <summary>
            Gets or sets a value indicating whether this instance is in edit mode.
            </summary>
            <value>
            	<c>true</c> if this instance is in edit mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Data.RecordCollection">
            <summary>
            Represents a collection of records.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RecordCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.#ctor(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RecordCollection"/> class.
            </summary>
            <param name="ownerGroup">The container record that holds the collection.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.SuspendNotifications">
            <summary>
            Suspends the notifications for changes in the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.ResumeNotifications">
            <summary>
            Resumes the notifications for changes in the collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.IndexOf(Telerik.Windows.Data.Record)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Insert(System.Int32,Telerik.Windows.Data.Record)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Add(Telerik.Windows.Data.Record)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Contains(Telerik.Windows.Data.Record)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.CopyTo(Telerik.Windows.Data.Record[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Remove(Telerik.Windows.Data.Record)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RecordCollection.Reset">
            <summary>
            Resets the collection to its original state if it was changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.RecordCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RecordCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.RecordCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.RecordCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Telerik.Windows.Data.Record"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Data.XmlNodePropertyDescriptor">
            <summary>
            Describes the elements, attributes and other properties of an XML node.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.XmlNodePropertyDescriptor"/> class.
            </summary>
            <param name="node">The node which properties are described.</param>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            True if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component (an XML node).
            </summary>
            <param name="component">The component (an XML node) with the property for which to retrieve the value.</param>
            <returns>
            The value of a property for a given component (an XML node).
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            True if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.XmlNodePropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component (the XML node) to the specified value.
            </summary>
            <param name="component">The component (the XML node) with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Telerik.Windows.Data.XmlNodePropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.XmlNodePropertyDescriptor.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
            <value></value>
            <returns>The name to display for the member.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.XmlNodePropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <value></value>
            <returns>true if the property is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.XmlNodePropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Type"/> that represents the type of the property.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.XmlNodePropertyDescriptor.SchemaInfo">
            <summary>
            Gets the schema information of the XML document in which the described node is located.
            </summary>
            <value>The schema info of the XML document in which the described node is located.</value>
        </member>
        <member name="T:Telerik.Windows.Data.Pair`2">
            <summary>
            Represents an ordered pair of objects.
            </summary>
            <typeparam name="TFirst">The type of the first element of the pair.</typeparam>
            <typeparam name="TSecond">The type of the second element of the pair.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Data.Pair`2.#ctor">
            <summary>
            Initializes a new instance of the Pair class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the Pair class.
            </summary>
            <param name="first">The first element of the pair.</param>
            <param name="second">The second element of the pair.</param>
        </member>
        <member name="P:Telerik.Windows.Data.Pair`2.First">
            <summary>
            Gets or sets the first element of the pair.
            </summary>
            <value>The first element of the pair.</value>
        </member>
        <member name="P:Telerik.Windows.Data.Pair`2.Second">
            <summary>
            Gets or sets the second element of the pair.
            </summary>
            <value>The second element of the pair.</value>
        </member>
        <member name="T:Telerik.Windows.Data.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.RadItemCollection">
            <summary>
            This class represents a collection of data items used by Telerik data controls such as the RadGridView or RadCarousel.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RadItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception>
        </member>
        <member name="M:Telerik.Windows.Data.RadItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:Telerik.Windows.Data.RadItemCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.RadItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.RadItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Data.RadItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Data.SelectedRecordsCollection">
            <summary>
            An observable collection containing the selected records.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.SelectedRecordsCollection.ClearItems">
            <summary>
            Removes all records from the collection and deselects them.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.SelectedRecordsCollection.InsertItem(System.Int32,Telerik.Windows.Data.Record)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="T:Telerik.Windows.Data.RecordNavigator">
            <summary>
            Traverses the record tree
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.#ctor(Telerik.Windows.Data.RecordManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.RecordNavigator"/> class.
            </summary>
            <param name="recordManager">The record manager.</param>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.FindFirstRecord">
            <summary>
            Searches for the first data record in the record collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.FindLastRecord">
            <summary>
            Searches for the last data record in the record collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.FindFirstSibling(Telerik.Windows.Data.GroupRecord)">
            <summary>
            Finds the first sibling.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.FindFirstDataRecord(Telerik.Windows.Data.Record)">
            <summary>
            Finds the first data record.
            </summary>
            <param name="record">The record.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.RecordNavigator.FindSibling(Telerik.Windows.Data.DataRecord)">
            <summary>
            Searches for the first sibling of the specified data record
            </summary>
            <param name="record">The record.</param>
            <returns>First sibling</returns>
        </member>
        <member name="P:Telerik.Windows.Data.RecordNavigator.Direction">
            <summary>
            Gets or sets the traversal direction (relative to the starting record).
            </summary>
            <value>The direction.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordNavigator.StartingRecord">
            <summary>
            Gets the starting record.
            </summary>
            <value>The starting record.</value>
        </member>
        <member name="P:Telerik.Windows.Data.RecordNavigator.SkipCollapsedGroups">
            <summary>
            Gets or sets a value indicating whether collapsed groups should be skipped during traversal.
            </summary>
            <value><c>true</c> if [collapsed groups should be skipped]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.Windows.Data.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.AppearanceCategory">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.BehaviorCategory">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.BrushesCategory">
            <summary>
              Looks up a localized string similar to Brushes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.CommonCategory">
            <summary>
              Looks up a localized string similar to Common Properties.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.ContentCategory">
            <summary>
              Looks up a localized string similar to Content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.FakeProperty">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.ItemsSourceInUse">
             <summary>
               Looks up a localized string similar to 
            Simultaneous use of Items and ItemsSource is not allowed.
             </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.LayoutCategory">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.MiscCategory">
            <summary>
              Looks up a localized string similar to Misc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.ObservableCollectionReentrancyNotAllowed">
            <summary>
              Looks up a localized string similar to ObservableCollection reentrancy not allowed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.RepeatedGroupDescriptionNotAllowed">
            <summary>
              Looks up a localized string similar to Repeated group description not allowed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.TextCategory">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.Strings.TransformCategory">
            <summary>
              Looks up a localized string similar to Transform.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Data.TableDefinition">
            <summary>
            The TableDefinition class defines the data model of a tabular data source. 
            It contains information about the field descriptors(columns) and hierarchy settings.
            This is an abstract class that is used by the data binding logic. Controls such as RadGridView
            inherit and provide their specific implementations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.TableDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.CopyPropertiesFrom(Telerik.Windows.Data.TableDefinition)">
            <summary>
            Copy properties from the source <see cref="T:Telerik.Windows.Data.TableDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.CopyChildTableDefinitionsFrom(Telerik.Windows.Data.TableDefinition)">
            <summary>
            Copy child table definitions from the source <see cref="T:Telerik.Windows.Data.TableDefinition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.CreateFieldDescriptors">
            <summary>
            Creates and configures all field descriptors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.CreateDataFieldDescriptor">
            <summary>
            Instantiates the proper data field descriptor object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.ConfigureColumns">
            <summary>
            Configures the columns. Override this method in a child class to perform column initialization whenever the table definition owner changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.OnChildTableDefinitionAdded(Telerik.Windows.Data.TableDefinitionCreatedEventArgs)">
            <summary>
            Called when a child table definition has been added. Override the method in a child class to perform extra initialization.
            </summary>
            <param name="e">The <see cref="T:Telerik.Windows.Data.TableDefinitionCreatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.OnTableDefinitionCreated(Telerik.Windows.Data.TableDefinitionCreatedEventArgs)">
            <summary>
            Raises the <see cref="E:TableDefinitionCreated"/> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.Windows.Data.TableDefinitionCreatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.CreateChildTableDefinition">
            <summary>
            Creats a child table definition of the correct inherited type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Called when the table definition data source changes. Override this method in a child class to perform extra initialization.
            <remarks>Always call the base implementation when overriding the method.</remarks>
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.GenerateFieldDescriptorsFromPropertyDescriptors">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinition.RemoveFields(System.Collections.Generic.IEnumerable{Telerik.Windows.Data.IFieldDescriptor})">
            <exclude/>
            <excludeToc/>
        </member>
        <member name="E:Telerik.Windows.Data.TableDefinition.DataSourceChanged">
            <summary>
            Occurs when the underlying data source has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.TableDefinition.PreviewDataRecordCreate">
            <summary>
            Occurs before a data record is created. Handling this event is usually done in custom hierarchy
            scenario where you can configure the child table definitions for the current record and initialize their data sources.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.TableDefinition.TableDefinitionCreated">
            <summary>
            Occurs when a table definition has been created. The event is most useful when providing customizations 
            in self-reference hierarchy scenarios where child table definitions are created automatically.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.TableDefinition.ChildTableDefinitionAdded">
            <summary>
            Occurs when a new child table definition has been added.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Data.TableDefinition.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.FieldDescriptors">
            <summary>
            Gets the field descriptors list.
            </summary>
            <value>The field descriptors.</value>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.DataSource">
            <summary>
            Gets or sets the data source for the current table definition.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.AutoGenerateFieldDescriptors">
            <summary>
            Gets or sets a value indicating whether field descriptors should be automatically generated.
            Auto-generating fields will reflect over the data source's properties and automatically
            create field descriptors for them.
            </summary>
            <value><c>True</c> if auto-generating field descriptors; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether data in this table definition is read only.
            Read only data means that data editing will be disabled.
            </summary>
            <value>
            	<c>True</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.Relation">
            <summary>
            Gets or sets the relation.
            Relations are used in hierarchy scenarios to obtain data from the parent data item.
            </summary>
            <value>The relation.</value>
        </member>
        <member name="P:Telerik.Windows.Data.TableDefinition.ChildTableDefinitions">
            <summary>
            Gets the child table definitions.
            This collection contains the child table definitions that define the hierarchy structure.
            </summary>
            <value>The child table definitions.</value>
        </member>
        <member name="T:Telerik.Windows.Data.TableDefinitionCollection">
            <summary>
            Represents a collection of table definitions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinitionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.TableDefinitionCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinitionCollection.#ctor(Telerik.Windows.Data.TableDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Data.TableDefinitionCollection"/> class.
            </summary>
            <param name="owner">The owner of the definitions in the collection.</param>
        </member>
        <member name="M:Telerik.Windows.Data.TableDefinitionCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Data.ValidationMode">
            <summary>
            Specifies the validation modes of a control that allows editing.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ValidationMode.Cell">
            <summary>
            Specifies that the validation logic of a row is called when the editing of a cell of the row is being ended.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Data.ValidationMode.Row">
            <summary>
            Specifies that the validation logic of a row is called when the editing of the row is being ended.
            </summary>
        </member>
    </members>
</doc>
